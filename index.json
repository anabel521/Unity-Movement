{
  "api/Oculus.Movement.AnimationRigging.AnimationRigSetup.html": {
    "href": "api/Oculus.Movement.AnimationRigging.AnimationRigSetup.html",
    "title": "Class AnimationRigSetup | Unity-Movement Documentation",
    "keywords": "Class AnimationRigSetup Enables the animation rig components once the has initialized. This is required because we need to build the animation rig with the updated hierarchy after the rearranges the bone hierarchy. Inheritance Object AnimationRigSetup Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class AnimationRigSetup : MonoBehaviour Fields _animator Animator component of character. Declaration protected Animator _animator Field Value Type Description Animator _checkSkeletalUpdatesByProxy Use proxy transforms to check skeletal changes. Proxy transforms can be used in case the original skeleton updates too much. Declaration protected bool _checkSkeletalUpdatesByProxy Field Value Type Description Boolean _ovrSkeletonConstraints IOVRSkeletonConstraint-based components. Declaration protected MonoBehaviour[] _ovrSkeletonConstraints Field Value Type Description MonoBehaviour [] _rebindAnimator If true, rebind the animator upon a skeletal change. Declaration protected bool _rebindAnimator Field Value Type Description Boolean _reEnableRig If true, disable then re-enable the rig upon a skeletal change. Declaration protected bool _reEnableRig Field Value Type Description Boolean _retargetingLayer Retargeting layer component to get data from. Declaration protected RetargetingLayer _retargetingLayer Field Value Type Description RetargetingLayer _rigBuilder Rig builder on character supporting Animation rigging. Declaration protected RigBuilder _rigBuilder Field Value Type Description RigBuilder _rigToggleOnFocus If true, disable then re-enable the rig upon a focus change. Declaration protected bool _rigToggleOnFocus Field Value Type Description Boolean _skeleton Skeletal component of character. Declaration protected OVRSkeleton _skeleton Field Value Type Description OVRSkeleton Properties AnimatorComp Animator component of character. Declaration public Animator AnimatorComp { get; set; } Property Value Type Description Animator CheckSkeletalUpdatesByProxy Use proxy transforms to check skeletal changes. Proxy transforms can be used in case the original skeleton updates too much. Declaration public bool CheckSkeletalUpdatesByProxy { get; set; } Property Value Type Description Boolean RebindAnimator If true, rebind the animator upon a skeletal change. Declaration public bool RebindAnimator { get; set; } Property Value Type Description Boolean ReEnableRig If true, disable then re-enable the rig upon a skeletal change. Declaration public bool ReEnableRig { get; set; } Property Value Type Description Boolean RetargetingLayerComp Retargeting layer component to get data from. Declaration public RetargetingLayer RetargetingLayerComp { get; set; } Property Value Type Description RetargetingLayer RigbuilderComp Rig builder on character supporting Animation rigging. Declaration public RigBuilder RigbuilderComp { get; set; } Property Value Type Description RigBuilder RigToggleOnFocus If true, disable then re-enable the rig upon a focus change. Declaration public bool RigToggleOnFocus { get; set; } Property Value Type Description Boolean Skeleton Skeletal component of character. Declaration public OVRSkeleton Skeleton { get; set; } Property Value Type Description OVRSkeleton Methods AddSkeletalConstraint(MonoBehaviour) Adds skeletal constraint. Valid for use via editor scripts only. Declaration public void AddSkeletalConstraint(MonoBehaviour newConstraint) Parameters Type Name Description MonoBehaviour newConstraint New constraint to add. Awake() Disable the animator and rig until the skeleton is ready to be used with animation rigging. Declaration protected virtual void Awake() OnApplicationFocus(Boolean) Disable and re-enable the rig if _rigToggleOnFocus is enabled. Declaration protected virtual void OnApplicationFocus(bool hasFocus) Parameters Type Name Description Boolean hasFocus True if the application is currently focused. Update() Initialize the animation rig if the skeleton is initialized, and check to re-enable the rig if necessary. Declaration protected virtual void Update()"
  },
  "api/Oculus.Movement.AnimationRigging.ArmPosData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.ArmPosData.html",
    "title": "Struct ArmPosData | Unity-Movement Documentation",
    "keywords": "Struct ArmPosData Information about the positioning of an arm. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct ArmPosData Fields LowerArmBone The lower arm transform. Declaration public Transform LowerArmBone Field Value Type Description Transform MoveSpeed The move towards speed for the arms. Declaration public float MoveSpeed Field Value Type Description Single ShoulderBone The shoulder transform. Declaration public Transform ShoulderBone Field Value Type Description Transform UpperArmBone The upper arm transform Declaration public Transform UpperArmBone Field Value Type Description Transform Weight The weight for the deformation on arms. Declaration public float Weight Field Value Type Description Single"
  },
  "api/Oculus.Movement.AnimationRigging.BonePairData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.BonePairData.html",
    "title": "Struct BonePairData | Unity-Movement Documentation",
    "keywords": "Struct BonePairData Information about the distance between two bone transforms. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct BonePairData Fields EndBone The end bone transform. Declaration public Transform EndBone Field Value Type Description Transform StartBone The start bone transform. Declaration public Transform StartBone Field Value Type Description Transform Properties Distance The distance between the start and end bones. Declaration public float Distance { readonly get; set; } Property Value Type Description Single IsMoveTowards If true, the end bone will move towards the deformation target position. Declaration public bool IsMoveTowards { readonly get; set; } Property Value Type Description Boolean MoveTowardsSpeed The speed of the bone move towards if enabled. Declaration public float MoveTowardsSpeed { readonly get; set; } Property Value Type Description Single SnapThreshold The distance between the target and current position before the end bone snaps to the target position. Declaration public float SnapThreshold { readonly get; set; } Property Value Type Description Single"
  },
  "api/Oculus.Movement.AnimationRigging.CustomMappings.html": {
    "href": "api/Oculus.Movement.AnimationRigging.CustomMappings.html",
    "title": "Class CustomMappings | Unity-Movement Documentation",
    "keywords": "Class CustomMappings Inheritance Object CustomMappings Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class CustomMappings Fields BoneIdToHumanBodyBone Paired OVRSkeleton bones with human body bones. Copied from OVRUnityHumanoidSkeletonRetargeter.OVRHumanBodyBonesMappings. The original mapping is not currently accessible by other classes. Declaration public static readonly Dictionary<OVRSkeleton.BoneId, HumanBodyBones> BoneIdToHumanBodyBone Field Value Type Description Dictionary < OVRSkeleton.BoneId , HumanBodyBones >"
  },
  "api/Oculus.Movement.AnimationRigging.DeformationConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.DeformationConstraint.html",
    "title": "Class DeformationConstraint | Unity-Movement Documentation",
    "keywords": "Class DeformationConstraint Deformation constraint. Inheritance Object DeformationConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class DeformationConstraint : RigConstraint<DeformationJob, DeformationData, DeformationJobBinder<DeformationData>>, IOVRSkeletonConstraint Methods RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.DeformationConstraintEditor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.DeformationConstraintEditor.html",
    "title": "Class DeformationConstraintEditor | Unity-Movement Documentation",
    "keywords": "Class DeformationConstraintEditor Custom editor for the deformation constraint. Inheritance Object DeformationConstraintEditor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class DeformationConstraintEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.AnimationRigging.DeformationData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.DeformationData.html",
    "title": "Struct DeformationData | Unity-Movement Documentation",
    "keywords": "Struct DeformationData Deformation data used by the deformation job. Implements the deformation data interface. Implements IDeformationData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct DeformationData : IDeformationData Methods AssignAnimator(Animator) Assign the Animator. Declaration public void AssignAnimator(Animator animator) Parameters Type Name Description Animator animator AssignOVRSkeleton(OVRSkeleton) Assign the OVR Skeleton. Declaration public void AssignOVRSkeleton(OVRSkeleton skeleton) Parameters Type Name Description OVRSkeleton skeleton The OVRSkeleton component. Setup(Transform, Transform) Setup the deformation data struct for the deformation job. Declaration public void Setup(Transform dummyOne, Transform dummyTwo) Parameters Type Name Description Transform dummyOne Dummy transform if skeleton is not ready. Transform dummyTwo Dummy transform if skeleton is not ready. Explicit Interface Implementations IDeformationData.BonePairs The position info for the bone pairs used for deformation. Declaration readonly BonePairData[] IDeformationData.BonePairs { get; } Returns Type Description BonePairData [] IDeformationData.ConstraintAnimator The Animator component for the character. Declaration readonly Animator IDeformationData.ConstraintAnimator { get; } Returns Type Description Animator IDeformationData.ConstraintSkeleton The OVR Skeleton component for the character. Declaration readonly OVRSkeleton IDeformationData.ConstraintSkeleton { get; } Returns Type Description OVRSkeleton IDeformationData.CorrectSpineOnce Allows the spine correction to run only once, assuming the skeleton's positions don't get updated multiple times. Declaration readonly bool IDeformationData.CorrectSpineOnce { get; } Returns Type Description Boolean IDeformationData.HipsToHeadBones The array of transforms from the hips to the head bones. Declaration readonly Transform[] IDeformationData.HipsToHeadBones { get; } Returns Type Description Transform [] IDeformationData.HipsToHeadDistance The distance between the hips and head bones. Declaration readonly float IDeformationData.HipsToHeadDistance { get; } Returns Type Description Single IDeformationData.LeftArm The position info for the left arm. Declaration readonly ArmPosData IDeformationData.LeftArm { get; } Returns Type Description ArmPosData IDeformationData.RightArm The position info for the right arm. Declaration readonly ArmPosData IDeformationData.RightArm { get; } Returns Type Description ArmPosData IDeformationData.SpineCorrectionType The type of spine translation correction that should be applied. Declaration readonly DeformationData.SpineTranslationCorrectionType IDeformationData.SpineCorrectionType { get; } Returns Type Description DeformationData.SpineTranslationCorrectionType Implements IDeformationData"
  },
  "api/Oculus.Movement.AnimationRigging.DeformationData.SpineTranslationCorrectionType.html": {
    "href": "api/Oculus.Movement.AnimationRigging.DeformationData.SpineTranslationCorrectionType.html",
    "title": "Enum DeformationData.SpineTranslationCorrectionType | Unity-Movement Documentation",
    "keywords": "Enum DeformationData.SpineTranslationCorrectionType The spine translation correction type. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public enum SpineTranslationCorrectionType Fields Name Description None No spine translation correction applied. SkipHead Skip the head bone for applying spine translation correction. SkipHips Skip the hips bone for applying spine translation correction. SkipHipsAndHead Skip both the head bone and hips bone for applying spine translation correction."
  },
  "api/Oculus.Movement.AnimationRigging.DeformationJob.BoneAnimationData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.DeformationJob.BoneAnimationData.html",
    "title": "Struct DeformationJob.BoneAnimationData | Unity-Movement Documentation",
    "keywords": "Struct DeformationJob.BoneAnimationData Bone animation data for the deformation job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct BoneAnimationData Fields Distance The distance between the start and end bone transforms. Declaration public float Distance Field Value Type Description Single IsMoveTowards True if it should be moving towards the target position. Declaration public bool IsMoveTowards Field Value Type Description Boolean MoveTowardsSpeed The speed to move towards the target position Declaration public float MoveTowardsSpeed Field Value Type Description Single SnapThreshold The distance between the target and current position before the current position snaps to the target. Declaration public float SnapThreshold Field Value Type Description Single"
  },
  "api/Oculus.Movement.AnimationRigging.DeformationJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.DeformationJob.html",
    "title": "Struct DeformationJob | Unity-Movement Documentation",
    "keywords": "Struct DeformationJob The Deformation job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct DeformationJob Fields BoneAnimData The array of bone animation data for the start and end bone pairs. Declaration public NativeArray<DeformationJob.BoneAnimationData> BoneAnimData Field Value Type Description NativeArray < DeformationJob.BoneAnimationData > BoneDirections The array of directions between the start and end bones. Declaration public NativeArray<Vector3> BoneDirections Field Value Type Description NativeArray < Vector3 > BonePositions The array of current animated bone positions. Declaration public NativeArray<Vector3> BonePositions Field Value Type Description NativeArray < Vector3 > CorrectSpineOnce Allows the spine correction to run only once, assuming the skeleton's positions don't get updated multiple times. Declaration public bool CorrectSpineOnce Field Value Type Description Boolean DeltaTime The array containing 1 element for the current delta time. Declaration public NativeArray<float> DeltaTime Field Value Type Description NativeArray < Single > EndBones The array of end bones for deformation. Declaration public NativeArray<ReadWriteTransformHandle> EndBones Field Value Type Description NativeArray < ReadWriteTransformHandle > HeadBonesIndex The index of the head bone in the hips to head bones array. Declaration public int HeadBonesIndex Field Value Type Description Int32 HipsBonesIndex The index of the hip bone in the hips to head bones array. Declaration public int HipsBonesIndex Field Value Type Description Int32 HipsToHeadBones The inclusive array of bones from the hips to the head. Declaration public NativeArray<ReadWriteTransformHandle> HipsToHeadBones Field Value Type Description NativeArray < ReadWriteTransformHandle > HipsToHeadDistance The distance of the hip bone to the head bone. Declaration public float HipsToHeadDistance Field Value Type Description Single LeftArmOffsetWeight The weight for the left arm offset. Declaration public float LeftArmOffsetWeight Field Value Type Description Single LeftLowerArmBone The ReadWrite transform handle for the left lower arm bone. Declaration public ReadWriteTransformHandle LeftLowerArmBone Field Value Type Description ReadWriteTransformHandle LeftUpperArmBone The ReadOnly transform handle for the left upper arm bone. Declaration public ReadOnlyTransformHandle LeftUpperArmBone Field Value Type Description ReadOnlyTransformHandle RightArmOffsetWeight The weight for the right arm offset. Declaration public float RightArmOffsetWeight Field Value Type Description Single RightLowerArmBone The ReadWrite transform handle for the right lower arm bone. Declaration public ReadWriteTransformHandle RightLowerArmBone Field Value Type Description ReadWriteTransformHandle RightUpperArmBone The ReadOnly transform handle for the right upper arm bone. Declaration public ReadOnlyTransformHandle RightUpperArmBone Field Value Type Description ReadOnlyTransformHandle SpineCorrectionType The spine correction type. Declaration public DeformationData.SpineTranslationCorrectionType SpineCorrectionType Field Value Type Description DeformationData.SpineTranslationCorrectionType StartBones The array of start bones for deformation. Declaration public NativeArray<ReadWriteTransformHandle> StartBones Field Value Type Description NativeArray < ReadWriteTransformHandle > Properties jobWeight Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty Methods ProcessAnimation(AnimationStream) Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream ProcessRootMotion(AnimationStream) Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream"
  },
  "api/Oculus.Movement.AnimationRigging.DeformationJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.DeformationJobBinder-1.html",
    "title": "Class DeformationJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class DeformationJobBinder<T> The Deformation job binder. Inheritance Object DeformationJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class DeformationJobBinder<T> : AnimationJobBinder<DeformationJob, T> where T : struct, IAnimationJobData, IDeformationData Type Parameters Name Description T The constraint data type Methods Create(Animator, ref T, Component) Declaration public override DeformationJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description DeformationJob Destroy(DeformationJob) Declaration public override void Destroy(DeformationJob job) Parameters Type Name Description DeformationJob job Update(DeformationJob, ref T) Declaration public override void Update(DeformationJob job, ref T data) Parameters Type Name Description DeformationJob job T data"
  },
  "api/Oculus.Movement.AnimationRigging.GroundingConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.GroundingConstraint.html",
    "title": "Class GroundingConstraint | Unity-Movement Documentation",
    "keywords": "Class GroundingConstraint Grounding constraint. Inheritance Object GroundingConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class GroundingConstraint : RigConstraint<GroundingJob, GroundingData, GroundingJobBinder<GroundingData>>, IOVRSkeletonConstraint Methods RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.GroundingData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.GroundingData.html",
    "title": "Struct GroundingData | Unity-Movement Documentation",
    "keywords": "Struct GroundingData Implements IGroundingData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct GroundingData : IGroundingData Methods Create() Called on when the animation job is being created. Declaration public void Create() FinishedMoving() Returns true if the move progress is lower than the threshold move progress. Declaration public bool FinishedMoving() Returns Type Description Boolean True if the joint has finished moving. GenerateThresholdMoveProgress() Generates a new value for the threshold move progress. Declaration public void GenerateThresholdMoveProgress() IsValid() Returns true if valid. Declaration public bool IsValid() Returns Type Description Boolean SetDefaultValues() Set default values. Declaration public void SetDefaultValues() Setup() Setup the grounding constraint. Declaration public void Setup() Explicit Interface Implementations IGroundingData.ConstraintSkeleton The original skeleton. Declaration readonly OVRCustomSkeleton IGroundingData.ConstraintSkeleton { get; } Returns Type Description OVRCustomSkeleton IGroundingData.FootRotationOffset The initial rotation offset for the feet. Declaration readonly Vector3 IGroundingData.FootRotationOffset { get; } Returns Type Description Vector3 IGroundingData.FootTarget The foot target for the leg. Declaration readonly Transform IGroundingData.FootTarget { get; } Returns Type Description Transform IGroundingData.GroundLayers The layers that the raycast will check against for grounding. Declaration readonly LayerMask IGroundingData.GroundLayers { get; } Returns Type Description LayerMask IGroundingData.GroundOffset The height offset from the grounded floor to be applied to the foot. Declaration readonly float IGroundingData.GroundOffset { get; } Returns Type Description Single IGroundingData.GroundRaycastDist The maximum distance that the raycast will go when checking for grounding. Declaration readonly float IGroundingData.GroundRaycastDist { get; } Returns Type Description Single IGroundingData.Hips The hips transform. Declaration readonly Transform IGroundingData.Hips { get; } Returns Type Description Transform IGroundingData.HipsTarget The hips target transform. Declaration readonly Transform IGroundingData.HipsTarget { get; } Returns Type Description Transform IGroundingData.KneeTarget The knee target for the leg. Declaration readonly Transform IGroundingData.KneeTarget { get; } Returns Type Description Transform IGroundingData.Leg The leg upper transform. Declaration readonly Transform IGroundingData.Leg { get; } Returns Type Description Transform IGroundingData.LegPosOffset The initial position offset for the leg. Declaration readonly Vector3 IGroundingData.LegPosOffset { get; } Returns Type Description Vector3 IGroundingData.LegRotOffset The initial rotation offset for the leg. Declaration readonly Quaternion IGroundingData.LegRotOffset { get; } Returns Type Description Quaternion IGroundingData.Pair Optional. The other leg's grounding constraint, used to check if this leg can move. Declaration readonly GroundingData IGroundingData.Pair { get; } Returns Type Description GroundingData IGroundingData.Progress The amount of move progress. Declaration float IGroundingData.Progress { set; } Returns Type Description Single IGroundingData.StepCurve The animation curve for evaluating the step height value. Declaration readonly AnimationCurve IGroundingData.StepCurve { get; } Returns Type Description AnimationCurve IGroundingData.StepDist The distance before the step is triggered. Declaration readonly float IGroundingData.StepDist { get; } Returns Type Description Single IGroundingData.StepHeight The height of the step taken. Declaration readonly float IGroundingData.StepHeight { get; } Returns Type Description Single IGroundingData.StepHeightScaleDist The maximum distance for the step height to not be scaled. Declaration readonly float IGroundingData.StepHeightScaleDist { get; } Returns Type Description Single IGroundingData.StepSpeed The speed of the step for the foot. Declaration readonly float IGroundingData.StepSpeed { get; } Returns Type Description Single Implements IGroundingData"
  },
  "api/Oculus.Movement.AnimationRigging.GroundingJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.GroundingJob.html",
    "title": "Struct GroundingJob | Unity-Movement Documentation",
    "keywords": "Struct GroundingJob The Grounding job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct GroundingJob Fields DeltaTime The array containing 1 element for the current delta time. Declaration public NativeArray<float> DeltaTime Field Value Type Description NativeArray < Single > FootRotationOffset Declaration public Quaternion FootRotationOffset Field Value Type Description Quaternion FootTarget The foot target transform. Declaration public ReadWriteTransformHandle FootTarget Field Value Type Description ReadWriteTransformHandle Hips The hips transform. Declaration public ReadOnlyTransformHandle Hips Field Value Type Description ReadOnlyTransformHandle HipsTarget The hips target transform. Declaration public ReadOnlyTransformHandle HipsTarget Field Value Type Description ReadOnlyTransformHandle IsGrounding The array containing 1 element if the foot should be grounded. Declaration public NativeArray<bool> IsGrounding Field Value Type Description NativeArray < Boolean > IsMovable The array containing 1 element if the foot should be moving. Declaration public NativeArray<bool> IsMovable Field Value Type Description NativeArray < Boolean > KneeTarget The knee target transform. Declaration public ReadOnlyTransformHandle KneeTarget Field Value Type Description ReadOnlyTransformHandle Leg The leg transform. Declaration public ReadWriteTransformHandle Leg Field Value Type Description ReadWriteTransformHandle LegPosOffset The leg position offset from the parent. Declaration public Vector3 LegPosOffset Field Value Type Description Vector3 LegRotOffset The leg rotation offset from the parent. Declaration public Quaternion LegRotOffset Field Value Type Description Quaternion MoveProgress The array containing 1 element for the current move progress. Declaration public NativeArray<float> MoveProgress Field Value Type Description NativeArray < Single > StepHeight Declaration public float StepHeight Field Value Type Description Single StepHeightScaleDist Declaration public float StepHeightScaleDist Field Value Type Description Single StepProgress The array containing 1 element for the current step progress. Declaration public NativeArray<float> StepProgress Field Value Type Description NativeArray < Single > TargetFootPos The array containing 1 element for the target position for the foot. Declaration public NativeArray<Vector3> TargetFootPos Field Value Type Description NativeArray < Vector3 > Properties jobWeight Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty Methods ProcessAnimation(AnimationStream) Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream ProcessRootMotion(AnimationStream) Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream"
  },
  "api/Oculus.Movement.AnimationRigging.GroundingJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.GroundingJobBinder-1.html",
    "title": "Class GroundingJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class GroundingJobBinder<T> The job binder for GroundingJob . Inheritance Object GroundingJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class GroundingJobBinder<T> : AnimationJobBinder<GroundingJob, T> where T : struct, IAnimationJobData, IGroundingData Type Parameters Name Description T The constraint data type, should be GroundingJob . Methods Create(Animator, ref T, Component) Declaration public override GroundingJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description GroundingJob Destroy(GroundingJob) Declaration public override void Destroy(GroundingJob job) Parameters Type Name Description GroundingJob job Update(GroundingJob, ref T) Declaration public override void Update(GroundingJob job, ref T data) Parameters Type Name Description GroundingJob job T data"
  },
  "api/Oculus.Movement.AnimationRigging.HipPinningConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.HipPinningConstraint.html",
    "title": "Class HipPinningConstraint | Unity-Movement Documentation",
    "keywords": "Class HipPinningConstraint Hip Pinning constraint. Inheritance Object HipPinningConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class HipPinningConstraint : RigConstraint<HipPinningJob, HipPinningData, HipPinningJobBinder<HipPinningData>>, IOVRSkeletonConstraint Methods RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.HipPinningConstraintEditor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.HipPinningConstraintEditor.html",
    "title": "Class HipPinningConstraintEditor | Unity-Movement Documentation",
    "keywords": "Class HipPinningConstraintEditor Custom editor for the hip pinning constraint. Inheritance Object HipPinningConstraintEditor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class HipPinningConstraintEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.AnimationRigging.HipPinningConstraintTarget.html": {
    "href": "api/Oculus.Movement.AnimationRigging.HipPinningConstraintTarget.html",
    "title": "Class HipPinningConstraintTarget | Unity-Movement Documentation",
    "keywords": "Class HipPinningConstraintTarget Specifies a target to be used for hip pinning. Inheritance Object HipPinningConstraintTarget Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class HipPinningConstraintTarget : MonoBehaviour Fields _chairCylinder The chair's cylinder transform. Declaration protected Transform _chairCylinder Field Value Type Description Transform _chairCylinderScaleMultiplier The chair's cylinder scale multiplier. Declaration protected float _chairCylinderScaleMultiplier Field Value Type Description Single _chairObject The game object containing the renderers for this hip pinning target. Declaration protected GameObject _chairObject Field Value Type Description GameObject _chairSeat The chair's seat transform. Declaration protected Transform _chairSeat Field Value Type Description Transform _hipTargetTransform The transform that the character's hip is positionally constrained to. Declaration protected Transform _hipTargetTransform Field Value Type Description Transform Properties ChairObject The game object containing the renderers for this hip pinning target. Declaration public GameObject ChairObject { get; } Property Value Type Description GameObject ChairSeatTransform The chair's seat transform. Declaration public Transform ChairSeatTransform { get; } Property Value Type Description Transform HipTargetInitialRotationOffset Returns the initial local rotation offset of the hips target. Declaration public Quaternion HipTargetInitialRotationOffset { get; } Property Value Type Description Quaternion HipTargetTransform The transform that the character's hip is positionally constrained to. Declaration public Transform HipTargetTransform { get; } Property Value Type Description Transform Methods UpdateHeight(Single) Update the height of the object that the hips will be constrained to. Declaration public void UpdateHeight(float heightAdjustment) Parameters Type Name Description Single heightAdjustment The height that this object will be adjusted to match."
  },
  "api/Oculus.Movement.AnimationRigging.HipPinningData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.HipPinningData.html",
    "title": "Struct HipPinningData | Unity-Movement Documentation",
    "keywords": "Struct HipPinningData Hip Pinning data used by the hip pinning job. Implements the hip pinning data interface. Implements IHipPinningData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct HipPinningData : IHipPinningData Methods AssignClosestHipPinningTarget(Vector3) Find and assign the closest hip pinning target to be the current hip pinning target. Declaration public void AssignClosestHipPinningTarget(Vector3 position) Parameters Type Name Description Vector3 position The position to check against. AssignOVRSkeleton(OVRCustomSkeleton) Assign the OVR Skeleton. Declaration public void AssignOVRSkeleton(OVRCustomSkeleton skeleton) Parameters Type Name Description OVRCustomSkeleton skeleton The OVRSkeleton CalibrateInitialHipHeight(Vector3) Calibrates the height of the hip pinning target to match the character's height. Declaration public void CalibrateInitialHipHeight(Vector3 position) Parameters Type Name Description Vector3 position The position of the character's hips. EnterHipPinningArea(HipPinningConstraintTarget) Event when the user enters a hip pinning area. Declaration public void EnterHipPinningArea(HipPinningConstraintTarget target) Parameters Type Name Description HipPinningConstraintTarget target ExitHipPinningArea(HipPinningConstraintTarget) Event when the user leaves a hip pinning area. Declaration public void ExitHipPinningArea(HipPinningConstraintTarget target) Parameters Type Name Description HipPinningConstraintTarget target Setup() Setup the hip pinning constraint. Declaration public void Setup() Events OnEnterHipPinningArea Called when the user enters a hip pinning area. Declaration public event Action<HipPinningConstraintTarget> OnEnterHipPinningArea Event Type Type Description Action < HipPinningConstraintTarget > OnExitHipPinningArea Called when the user leaves a hip pinning area. Declaration public event Action<HipPinningConstraintTarget> OnExitHipPinningArea Event Type Type Description Action < HipPinningConstraintTarget > Explicit Interface Implementations IHipPinningData.Bones The bones that compose the skeleton. Declaration readonly Transform[] IHipPinningData.Bones { get; } Returns Type Description Transform [] IHipPinningData.CalibratedHipPos The calibrated hip position. Declaration readonly Vector3 IHipPinningData.CalibratedHipPos { get; } Returns Type Description Vector3 IHipPinningData.ConstraintSkeleton The OVR Skeleton component. Declaration readonly OVRCustomSkeleton IHipPinningData.ConstraintSkeleton { get; } Returns Type Description OVRCustomSkeleton IHipPinningData.CurrentHipPinningTarget Returns the current hip pinning target. Declaration readonly HipPinningConstraintTarget IHipPinningData.CurrentHipPinningTarget { get; } Returns Type Description HipPinningConstraintTarget IHipPinningData.HipPinningLeave If true, hip pinning will be disabled when the character leaves a certain range. Declaration readonly bool IHipPinningData.HipPinningLeave { get; } Returns Type Description Boolean IHipPinningData.HipPinningLeaveRange The range from the hip pinning target before hip pinning is disabled. Declaration readonly float IHipPinningData.HipPinningLeaveRange { get; } Returns Type Description Single IHipPinningData.HipPinningTargets The array of available hip pinning targets. Declaration readonly HipPinningConstraintTarget[] IHipPinningData.HipPinningTargets { get; } Returns Type Description HipPinningConstraintTarget [] IHipPinningData.InitialHipLocalRotation The initial hip local rotation. Declaration readonly Quaternion IHipPinningData.InitialHipLocalRotation { get; } Returns Type Description Quaternion Implements IHipPinningData"
  },
  "api/Oculus.Movement.AnimationRigging.HipPinningJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.HipPinningJob.html",
    "title": "Struct HipPinningJob | Unity-Movement Documentation",
    "keywords": "Struct HipPinningJob The Hip Pinning job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct HipPinningJob Fields Bones The array of all bones on the skeleton. Declaration public NativeArray<ReadWriteTransformHandle> Bones Field Value Type Description NativeArray < ReadWriteTransformHandle > DeltaTime The array containing 1 element for the current delta time. Declaration public NativeArray<float> DeltaTime Field Value Type Description NativeArray < Single > Hips The hips bone Declaration public ReadWriteTransformHandle Hips Field Value Type Description ReadWriteTransformHandle TargetHipPos The target position for the hips. Declaration public NativeArray<Vector3> TargetHipPos Field Value Type Description NativeArray < Vector3 > ValidOvrSkeleton If true, update the bone positions as there is a valid OVR Skeleton. Declaration public bool ValidOvrSkeleton Field Value Type Description Boolean Properties jobWeight Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty Methods ProcessAnimation(AnimationStream) Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream ProcessRootMotion(AnimationStream) Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream"
  },
  "api/Oculus.Movement.AnimationRigging.HipPinningJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.HipPinningJobBinder-1.html",
    "title": "Class HipPinningJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class HipPinningJobBinder<T> The Hip Pinning job binder. Inheritance Object HipPinningJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class HipPinningJobBinder<T> : AnimationJobBinder<HipPinningJob, T> where T : struct, IAnimationJobData, IHipPinningData Type Parameters Name Description T The constraint data type Methods Create(Animator, ref T, Component) Declaration public override HipPinningJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description HipPinningJob Destroy(HipPinningJob) Declaration public override void Destroy(HipPinningJob job) Parameters Type Name Description HipPinningJob job Update(HipPinningJob, ref T) Declaration public override void Update(HipPinningJob job, ref T data) Parameters Type Name Description HipPinningJob job T data"
  },
  "api/Oculus.Movement.AnimationRigging.html": {
    "href": "api/Oculus.Movement.AnimationRigging.html",
    "title": "Namespace Oculus.Movement.AnimationRigging | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.AnimationRigging Classes AnimationRigSetup Enables the animation rig components once the has initialized. This is required because we need to build the animation rig with the updated hierarchy after the rearranges the bone hierarchy. CustomMappings DeformationConstraint Deformation constraint. DeformationConstraintEditor Custom editor for the deformation constraint. DeformationJobBinder<T> The Deformation job binder. GroundingConstraint Grounding constraint. GroundingJobBinder<T> The job binder for GroundingJob . HipPinningConstraint Hip Pinning constraint. HipPinningConstraintEditor Custom editor for the hip pinning constraint. HipPinningConstraintTarget Specifies a target to be used for hip pinning. HipPinningJobBinder<T> The Hip Pinning job binder. PositionalJointConstraint Mimics Position Constraint and can be run manually. RetargetingAnimationConstraint Retargeting constraint. RetargetingAnimationJobBinder<T> The retargeting animation job binder. RetargetingLayer Retargeting class that inherits from OVRUnityHumanoidSkeletonRetargeter and provides functions that work with animation rigging. TwistDistributionConstraint Twist Distribution constraint. TwistDistributionConstraintEditor Custom editor for the twist distribution constraint. TwistDistributionJobBinder<T> The TwistDistribution job binder. Structs ArmPosData Information about the positioning of an arm. BonePairData Information about the distance between two bone transforms. DeformationData Deformation data used by the deformation job. Implements the deformation data interface. DeformationJob The Deformation job. DeformationJob.BoneAnimationData Bone animation data for the deformation job. GroundingData GroundingJob The Grounding job. HipPinningData Hip Pinning data used by the hip pinning job. Implements the hip pinning data interface. HipPinningJob The Hip Pinning job. RetargetingAnimationJob Retargeting animation job. RetargetingConstraintData Retargeting data used by the constraint. Implements the retargeting interface. TwistDistributionData Twist distribution data used by the twist distribution job. Implements the twist distribution data interface. TwistDistributionJob The TwistDistribution job. Interfaces IDeformationData Interface for deformation data. IGroundingData Interface for grounding data. IHipPinningData Interface for hip pinning data. IJointConstraint Constraint interface. Used to manually trigger constraints at runtime instead of relying on Unity to do that. IOVRSkeletonConstraint Interface for skeletal constraint component. IRetargetingData Interface for retargeting data. ITwistDistributionData Interface for twist distribution data. Enums DeformationData.SpineTranslationCorrectionType The spine translation correction type. TwistDistributionData.Axis Axis type for TwistDistribution."
  },
  "api/Oculus.Movement.AnimationRigging.IDeformationData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IDeformationData.html",
    "title": "Interface IDeformationData | Unity-Movement Documentation",
    "keywords": "Interface IDeformationData Interface for deformation data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IDeformationData Properties BonePairs The position info for the bone pairs used for deformation. Declaration BonePairData[] BonePairs { get; } Property Value Type Description BonePairData [] ConstraintAnimator The Animator component for the character. Declaration Animator ConstraintAnimator { get; } Property Value Type Description Animator ConstraintSkeleton The OVR Skeleton component for the character. Declaration OVRSkeleton ConstraintSkeleton { get; } Property Value Type Description OVRSkeleton CorrectSpineOnce Allows the spine correction to run only once, assuming the skeleton's positions don't get updated multiple times. Declaration bool CorrectSpineOnce { get; } Property Value Type Description Boolean HipsToHeadBones The array of transforms from the hips to the head bones. Declaration Transform[] HipsToHeadBones { get; } Property Value Type Description Transform [] HipsToHeadDistance The distance between the hips and head bones. Declaration float HipsToHeadDistance { get; } Property Value Type Description Single LeftArm The position info for the left arm. Declaration ArmPosData LeftArm { get; } Property Value Type Description ArmPosData RightArm The position info for the right arm. Declaration ArmPosData RightArm { get; } Property Value Type Description ArmPosData SpineCorrectionType The type of spine translation correction that should be applied. Declaration DeformationData.SpineTranslationCorrectionType SpineCorrectionType { get; } Property Value Type Description DeformationData.SpineTranslationCorrectionType"
  },
  "api/Oculus.Movement.AnimationRigging.IGroundingData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IGroundingData.html",
    "title": "Interface IGroundingData | Unity-Movement Documentation",
    "keywords": "Interface IGroundingData Interface for grounding data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IGroundingData Properties ConstraintSkeleton The original skeleton. Declaration OVRCustomSkeleton ConstraintSkeleton { get; } Property Value Type Description OVRCustomSkeleton FootRotationOffset The initial rotation offset for the feet. Declaration Vector3 FootRotationOffset { get; } Property Value Type Description Vector3 FootTarget The foot target for the leg. Declaration Transform FootTarget { get; } Property Value Type Description Transform GroundLayers The layers that the raycast will check against for grounding. Declaration LayerMask GroundLayers { get; } Property Value Type Description LayerMask GroundOffset The height offset from the grounded floor to be applied to the foot. Declaration float GroundOffset { get; } Property Value Type Description Single GroundRaycastDist The maximum distance that the raycast will go when checking for grounding. Declaration float GroundRaycastDist { get; } Property Value Type Description Single Hips The hips transform. Declaration Transform Hips { get; } Property Value Type Description Transform HipsTarget The hips target transform. Declaration Transform HipsTarget { get; } Property Value Type Description Transform KneeTarget The knee target for the leg. Declaration Transform KneeTarget { get; } Property Value Type Description Transform Leg The leg upper transform. Declaration Transform Leg { get; } Property Value Type Description Transform LegPosOffset The initial position offset for the leg. Declaration Vector3 LegPosOffset { get; } Property Value Type Description Vector3 LegRotOffset The initial rotation offset for the leg. Declaration Quaternion LegRotOffset { get; } Property Value Type Description Quaternion Pair Optional. The other leg's grounding constraint, used to check if this leg can move. Declaration GroundingData Pair { get; } Property Value Type Description GroundingData Progress The amount of move progress. Declaration float Progress { set; } Property Value Type Description Single StepCurve The animation curve for evaluating the step height value. Declaration AnimationCurve StepCurve { get; } Property Value Type Description AnimationCurve StepDist The distance before the step is triggered. Declaration float StepDist { get; } Property Value Type Description Single StepHeight The height of the step taken. Declaration float StepHeight { get; } Property Value Type Description Single StepHeightScaleDist The maximum distance for the step height to not be scaled. Declaration float StepHeightScaleDist { get; } Property Value Type Description Single StepSpeed The speed of the step for the foot. Declaration float StepSpeed { get; } Property Value Type Description Single Methods Create() Called on when the animation job is being created. Declaration void Create() GenerateThresholdMoveProgress() Generates a new value for the threshold move progress. Declaration void GenerateThresholdMoveProgress()"
  },
  "api/Oculus.Movement.AnimationRigging.IHipPinningData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IHipPinningData.html",
    "title": "Interface IHipPinningData | Unity-Movement Documentation",
    "keywords": "Interface IHipPinningData Interface for hip pinning data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IHipPinningData Properties Bones The bones that compose the skeleton. Declaration Transform[] Bones { get; } Property Value Type Description Transform [] CalibratedHipPos The calibrated hip position. Declaration Vector3 CalibratedHipPos { get; } Property Value Type Description Vector3 ConstraintSkeleton The OVR Skeleton component. Declaration OVRCustomSkeleton ConstraintSkeleton { get; } Property Value Type Description OVRCustomSkeleton CurrentHipPinningTarget Returns the current hip pinning target. Declaration HipPinningConstraintTarget CurrentHipPinningTarget { get; } Property Value Type Description HipPinningConstraintTarget HipPinningLeave If true, hip pinning will be disabled when the character leaves a certain range. Declaration bool HipPinningLeave { get; } Property Value Type Description Boolean HipPinningLeaveRange The range from the hip pinning target before hip pinning is disabled. Declaration float HipPinningLeaveRange { get; } Property Value Type Description Single HipPinningTargets The array of available hip pinning targets. Declaration HipPinningConstraintTarget[] HipPinningTargets { get; } Property Value Type Description HipPinningConstraintTarget [] InitialHipLocalRotation The initial hip local rotation. Declaration Quaternion InitialHipLocalRotation { get; } Property Value Type Description Quaternion Methods AssignClosestHipPinningTarget(Vector3) Find and assign the closest hip pinning target to be the current hip pinning target. Declaration void AssignClosestHipPinningTarget(Vector3 position) Parameters Type Name Description Vector3 position The position to check against. EnterHipPinningArea(HipPinningConstraintTarget) Called when the user enters a hip pinning area. Declaration void EnterHipPinningArea(HipPinningConstraintTarget target) Parameters Type Name Description HipPinningConstraintTarget target ExitHipPinningArea(HipPinningConstraintTarget) Called when the user leaves a hip pinning area. Declaration void ExitHipPinningArea(HipPinningConstraintTarget target) Parameters Type Name Description HipPinningConstraintTarget target Events OnEnterHipPinningArea Event when the user enters a hip pinning area. Declaration event Action<HipPinningConstraintTarget> OnEnterHipPinningArea Event Type Type Description Action < HipPinningConstraintTarget > OnExitHipPinningArea Event when the user leaves a hip pinning area. Declaration event Action<HipPinningConstraintTarget> OnExitHipPinningArea Event Type Type Description Action < HipPinningConstraintTarget >"
  },
  "api/Oculus.Movement.AnimationRigging.IJointConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IJointConstraint.html",
    "title": "Interface IJointConstraint | Unity-Movement Documentation",
    "keywords": "Interface IJointConstraint Constraint interface. Used to manually trigger constraints at runtime instead of relying on Unity to do that. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IJointConstraint Methods Update() Updates constraint at runtime. Declaration void Update()"
  },
  "api/Oculus.Movement.AnimationRigging.IOVRSkeletonConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IOVRSkeletonConstraint.html",
    "title": "Interface IOVRSkeletonConstraint | Unity-Movement Documentation",
    "keywords": "Interface IOVRSkeletonConstraint Interface for skeletal constraint component. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IOVRSkeletonConstraint Methods RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration void RegenerateData()"
  },
  "api/Oculus.Movement.AnimationRigging.IRetargetingData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IRetargetingData.html",
    "title": "Interface IRetargetingData | Unity-Movement Documentation",
    "keywords": "Interface IRetargetingData Interface for retargeting data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IRetargetingData Properties RotationAdjustments Optional rotational adjustment to be applied during retargeting. Declaration Quaternion[] RotationAdjustments { get; } Property Value Type Description Quaternion [] RotationOffsets Rotation offset to be applied during retargeting. Declaration Quaternion[] RotationOffsets { get; } Property Value Type Description Quaternion [] ShouldUpdatePosition Indicates if target transform's position should be updated. Once a position is updated, the original position will be lost. Declaration bool[] ShouldUpdatePosition { get; } Property Value Type Description Boolean [] SourceTransforms Source transforms used for retargeting. Declaration Transform[] SourceTransforms { get; } Property Value Type Description Transform [] TargetTransforms Target transforms affected by retargeting. Declaration Transform[] TargetTransforms { get; } Property Value Type Description Transform [] Methods UpdateDynamicMetadata() Allows updating any dynamic data at runtime. Declaration void UpdateDynamicMetadata()"
  },
  "api/Oculus.Movement.AnimationRigging.ITwistDistributionData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.ITwistDistributionData.html",
    "title": "Interface ITwistDistributionData | Unity-Movement Documentation",
    "keywords": "Interface ITwistDistributionData Interface for twist distribution data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface ITwistDistributionData Properties ConstraintSkeleton The OVR Skeleton component for the character. Declaration OVRCustomSkeleton ConstraintSkeleton { get; } Property Value Type Description OVRCustomSkeleton SegmentEnd The target transform containing the twist (like a wrist). Declaration Transform SegmentEnd { get; } Property Value Type Description Transform SegmentStart The start transform on the opposite side of the twist source (like an elbow). Declaration Transform SegmentStart { get; } Property Value Type Description Transform SegmentUp Optional. Assign a different transform to be used for the Segment End up vector. Declaration Transform SegmentUp { get; } Property Value Type Description Transform TwistForwardAxis The twist forward axis. Declaration Vector3 TwistForwardAxis { get; } Property Value Type Description Vector3 TwistNodes The array of twist joints and their weights to be affected by the source transform's rotation. Declaration WeightedTransformArray TwistNodes { get; } Property Value Type Description WeightedTransformArray TwistNodeSpacings The proportional space between each twist node. Declaration float[] TwistNodeSpacings { get; } Property Value Type Description Single [] TwistNodesProperty The name of the twist nodes weighted transform array property. Declaration string TwistNodesProperty { get; } Property Value Type Description String TwistNodeUps The array of twist node up directions. Declaration Vector3[] TwistNodeUps { get; } Property Value Type Description Vector3 [] TwistUpAxis The twist up axis. Declaration Vector3 TwistUpAxis { get; } Property Value Type Description Vector3"
  },
  "api/Oculus.Movement.AnimationRigging.PositionalJointConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.PositionalJointConstraint.html",
    "title": "Class PositionalJointConstraint | Unity-Movement Documentation",
    "keywords": "Class PositionalJointConstraint Mimics Position Constraint and can be run manually. Inheritance Object PositionalJointConstraint Implements IJointConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class PositionalJointConstraint : IJointConstraint Constructors PositionalJointConstraint(Transform) Main constructor. Declaration public PositionalJointConstraint(Transform transform) Parameters Type Name Description Transform transform Transform with positional constraint. Methods Update() Updates positional constraint at runtime. Declaration public void Update() Implements IJointConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingAnimationConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingAnimationConstraint.html",
    "title": "Class RetargetingAnimationConstraint | Unity-Movement Documentation",
    "keywords": "Class RetargetingAnimationConstraint Retargeting constraint. Inheritance Object RetargetingAnimationConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class RetargetingAnimationConstraint : RigConstraint<RetargetingAnimationJob, RetargetingConstraintData, RetargetingAnimationJobBinder<RetargetingConstraintData>>, IOVRSkeletonConstraint Properties RetargetingLayerComp Retargeting layer accessors. Declaration public RetargetingLayer RetargetingLayerComp { get; set; } Property Value Type Description RetargetingLayer Methods RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingAnimationJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingAnimationJob.html",
    "title": "Struct RetargetingAnimationJob | Unity-Movement Documentation",
    "keywords": "Struct RetargetingAnimationJob Retargeting animation job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct RetargetingAnimationJob Fields RotationAdjustments Rotation adjustments per joint. Declaration public NativeArray<Quaternion> RotationAdjustments Field Value Type Description NativeArray < Quaternion > RotationOffsets Rotation offsets per joint. Declaration public NativeArray<Quaternion> RotationOffsets Field Value Type Description NativeArray < Quaternion > ShouldUpdatePosition Boolean indicating if position should be updated or not. Declaration public NativeArray<bool> ShouldUpdatePosition Field Value Type Description NativeArray < Boolean > SourceTransforms Source transforms used to affect target during retargeting. Declaration public NativeArray<ReadOnlyTransformHandle> SourceTransforms Field Value Type Description NativeArray < ReadOnlyTransformHandle > TargetTransforms Target transforms to affect. Declaration public NativeArray<ReadWriteTransformHandle> TargetTransforms Field Value Type Description NativeArray < ReadWriteTransformHandle > Properties jobWeight Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty Methods ProcessAnimation(AnimationStream) Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream ProcessRootMotion(AnimationStream) Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingAnimationJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingAnimationJobBinder-1.html",
    "title": "Class RetargetingAnimationJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class RetargetingAnimationJobBinder<T> The retargeting animation job binder. Inheritance Object RetargetingAnimationJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class RetargetingAnimationJobBinder<T> : AnimationJobBinder<RetargetingAnimationJob, T> where T : struct, IAnimationJobData, IRetargetingData Type Parameters Name Description T The constraint data type. Methods Create(Animator, ref T, Component) Declaration public override RetargetingAnimationJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description RetargetingAnimationJob Destroy(RetargetingAnimationJob) Declaration public override void Destroy(RetargetingAnimationJob job) Parameters Type Name Description RetargetingAnimationJob job Update(RetargetingAnimationJob, ref T) Declaration public override void Update(RetargetingAnimationJob job, ref T data) Parameters Type Name Description RetargetingAnimationJob job T data"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingConstraintData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingConstraintData.html",
    "title": "Struct RetargetingConstraintData | Unity-Movement Documentation",
    "keywords": "Struct RetargetingConstraintData Retargeting data used by the constraint. Implements the retargeting interface. Implements IRetargetingData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct RetargetingConstraintData : IRetargetingData Properties AllowDynamicAdjustmentsRuntime Declaration public bool AllowDynamicAdjustmentsRuntime { get; set; } Property Value Type Description Boolean RetargetingLayerComp Declaration public RetargetingLayer RetargetingLayerComp { get; set; } Property Value Type Description RetargetingLayer Skeleton The OVRSkeleton component. Declaration public readonly OVRSkeleton Skeleton { get; } Property Value Type Description OVRSkeleton Methods IsValid() Declaration public bool IsValid() Returns Type Description Boolean SetDefaultValues() Declaration public void SetDefaultValues() SetUp(GameObject, GameObject) Set up all job data. Declaration public void SetUp(GameObject dummySourceObject, GameObject dummyTargetObject) Parameters Type Name Description GameObject dummySourceObject Fallback source object if skeleton is not ready. GameObject dummyTargetObject Fallback target object if skeleton is not ready. UpdateDynamicMetadata() Update dynamic data, can be useful if user changes it at runtime. Declaration public void UpdateDynamicMetadata() Explicit Interface Implementations IRetargetingData.RotationAdjustments Optional rotational adjustment to be applied during retargeting. Declaration readonly Quaternion[] IRetargetingData.RotationAdjustments { get; } Returns Type Description Quaternion [] IRetargetingData.RotationOffsets Rotation offset to be applied during retargeting. Declaration readonly Quaternion[] IRetargetingData.RotationOffsets { get; } Returns Type Description Quaternion [] IRetargetingData.ShouldUpdatePosition Indicates if target transform's position should be updated. Once a position is updated, the original position will be lost. Declaration readonly bool[] IRetargetingData.ShouldUpdatePosition { get; } Returns Type Description Boolean [] IRetargetingData.SourceTransforms Source transforms used for retargeting. Declaration readonly Transform[] IRetargetingData.SourceTransforms { get; } Returns Type Description Transform [] IRetargetingData.TargetTransforms Target transforms affected by retargeting. Declaration readonly Transform[] IRetargetingData.TargetTransforms { get; } Returns Type Description Transform [] Implements IRetargetingData"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingLayer.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingLayer.html",
    "title": "Class RetargetingLayer | Unity-Movement Documentation",
    "keywords": "Class RetargetingLayer Retargeting class that inherits from OVRUnityHumanoidSkeletonRetargeter and provides functions that work with animation rigging. Inheritance Object RetargetingLayer Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class RetargetingLayer : OVRUnityHumanoidSkeletonRetargeter Fields _disableAvatar Disable the target's avatar after building its meta data. There is an issue in Unity where the positions of all of the retargeted's bones are not set if an avatar is assigned during runtime, even if the avatar's \"Translation DoF\" checkbox is checked (specifically the fingers). The drawback of disabling an avatar is that animations or animation rig constraints might not run on the character. _positionsToCorrectLateUpdate can be used to keep the avatar and also correct finger positions in LateUpdate. Declaration protected bool _disableAvatar Field Value Type Description Boolean _maskToSetToTPose Since some bones are not affected by retargeting, some joints should be reset to t-pose. Declaration protected AvatarMask _maskToSetToTPose Field Value Type Description AvatarMask _positionsToCorrectLateUpdate Positions to correct after the fact. Avatar masks prevent setting positions of the hands precisely. Declaration protected AvatarMask _positionsToCorrectLateUpdate Field Value Type Description AvatarMask Properties DisableAvatar Accessors for disable avatar toggle. Declaration public bool DisableAvatar { get; set; } Property Value Type Description Boolean EnableTrackingByProxy Declaration public bool EnableTrackingByProxy { get; set; } Property Value Type Description Boolean MaskToSetToTPoseComp Mask to set to TPose accessors. Declaration public AvatarMask MaskToSetToTPoseComp { get; set; } Property Value Type Description AvatarMask PositionsToCorrectLateUpdateComp Positions to correct accessors. Declaration public AvatarMask PositionsToCorrectLateUpdateComp { get; set; } Property Value Type Description AvatarMask ProxyChangeCount Triggered if proxy transforms were recreated. Declaration public int ProxyChangeCount { get; } Property Value Type Description Int32 Methods FillTransformArrays(List<Transform>, List<Transform>, List<Boolean>, List<Quaternion>, List<Quaternion>, AvatarMask) Fills transform lists with meta data. Declaration public void FillTransformArrays(List<Transform> sourceTransforms, List<Transform> targetTransforms, List<bool> shouldUpdatePositions, List<Quaternion> rotationOffsets, List<Quaternion> rotationAdjustments, AvatarMask avatarMask) Parameters Type Name Description List < Transform > sourceTransforms Source transforms. List < Transform > targetTransforms Target transforms. List < Boolean > shouldUpdatePositions If joint positions should be updated or not. List < Quaternion > rotationOffsets Rotation offset per joint. List < Quaternion > rotationAdjustments Rotation tweak per joint. AvatarMask avatarMask Mask to restrict retargeting. GetNumberOfTransformsRetargeted() Gets number of transforms being retargeted currently. This can change during initialization. Declaration public int GetNumberOfTransformsRetargeted() Returns Type Description Int32 Number of transforms with a valid correction quaternion. LateUpdate() Allows fixing joints to T-pose. The avatar does not allow precise finger positions even with translate dof checked. Declaration protected virtual void LateUpdate() Start() Initialize base class and also any variables required by this class, such as the positions and rotations of the character joints at rest pose. Declaration protected override void Start() Update() Declaration protected override void Update() UpdateAdjustments(Quaternion[], Boolean[], Quaternion[], AvatarMask) Update adjustment arrays. Declaration public void UpdateAdjustments(Quaternion[] rotationOffsets, bool[] shouldUpdatePositions, Quaternion[] rotationAdjustments, AvatarMask avatarMask) Parameters Type Name Description Quaternion [] rotationOffsets Rotation offset per joint. Boolean [] shouldUpdatePositions If joint positions should be updated or not. Quaternion [] rotationAdjustments Rotation tweak per joint AvatarMask avatarMask Mask to restrict retargeting."
  },
  "api/Oculus.Movement.AnimationRigging.TwistDistributionConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.TwistDistributionConstraint.html",
    "title": "Class TwistDistributionConstraint | Unity-Movement Documentation",
    "keywords": "Class TwistDistributionConstraint Twist Distribution constraint. Inheritance Object TwistDistributionConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class TwistDistributionConstraint : RigConstraint<TwistDistributionJob, TwistDistributionData, TwistDistributionJobBinder<TwistDistributionData>>, IOVRSkeletonConstraint Methods RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.TwistDistributionConstraintEditor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.TwistDistributionConstraintEditor.html",
    "title": "Class TwistDistributionConstraintEditor | Unity-Movement Documentation",
    "keywords": "Class TwistDistributionConstraintEditor Custom editor for the twist distribution constraint. Inheritance Object TwistDistributionConstraintEditor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class TwistDistributionConstraintEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.AnimationRigging.TwistDistributionData.Axis.html": {
    "href": "api/Oculus.Movement.AnimationRigging.TwistDistributionData.Axis.html",
    "title": "Enum TwistDistributionData.Axis | Unity-Movement Documentation",
    "keywords": "Enum TwistDistributionData.Axis Axis type for TwistDistribution. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public enum Axis Fields Name Description X X Axis. Y Y Axis. Z Z Axis."
  },
  "api/Oculus.Movement.AnimationRigging.TwistDistributionData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.TwistDistributionData.html",
    "title": "Struct TwistDistributionData | Unity-Movement Documentation",
    "keywords": "Struct TwistDistributionData Twist distribution data used by the twist distribution job. Implements the twist distribution data interface. Implements ITwistDistributionData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct TwistDistributionData : ITwistDistributionData Methods AssignOVRSkeleton(OVRCustomSkeleton) Assign the OVR Skeleton. Declaration public void AssignOVRSkeleton(OVRCustomSkeleton skeleton) Parameters Type Name Description OVRCustomSkeleton skeleton The OVRSkeleton AssignSegments(Transform, Transform, Transform) Assign segments Declaration public void AssignSegments(Transform segmentStart, Transform segmentEnd, Transform segmentUp) Parameters Type Name Description Transform segmentStart Transform segmentEnd Transform segmentUp AssignTwistNodes(Transform[]) Assign twist nodes. Declaration public void AssignTwistNodes(Transform[] twistNodes) Parameters Type Name Description Transform [] twistNodes Setup() Caches specific transformation information before OVRSkeleton runs. Declaration public void Setup() Explicit Interface Implementations ITwistDistributionData.ConstraintSkeleton The OVR Skeleton component for the character. Declaration readonly OVRCustomSkeleton ITwistDistributionData.ConstraintSkeleton { get; } Returns Type Description OVRCustomSkeleton ITwistDistributionData.SegmentEnd The target transform containing the twist (like a wrist). Declaration readonly Transform ITwistDistributionData.SegmentEnd { get; } Returns Type Description Transform ITwistDistributionData.SegmentStart The start transform on the opposite side of the twist source (like an elbow). Declaration readonly Transform ITwistDistributionData.SegmentStart { get; } Returns Type Description Transform ITwistDistributionData.SegmentUp Optional. Assign a different transform to be used for the Segment End up vector. Declaration readonly Transform ITwistDistributionData.SegmentUp { get; } Returns Type Description Transform ITwistDistributionData.TwistForwardAxis The twist forward axis. Declaration readonly Vector3 ITwistDistributionData.TwistForwardAxis { get; } Returns Type Description Vector3 ITwistDistributionData.TwistNodes The array of twist joints and their weights to be affected by the source transform's rotation. Declaration readonly WeightedTransformArray ITwistDistributionData.TwistNodes { get; } Returns Type Description WeightedTransformArray ITwistDistributionData.TwistNodeSpacings The proportional space between each twist node. Declaration readonly float[] ITwistDistributionData.TwistNodeSpacings { get; } Returns Type Description Single [] ITwistDistributionData.TwistNodesProperty The name of the twist nodes weighted transform array property. Declaration readonly string ITwistDistributionData.TwistNodesProperty { get; } Returns Type Description String ITwistDistributionData.TwistNodeUps The array of twist node up directions. Declaration readonly Vector3[] ITwistDistributionData.TwistNodeUps { get; } Returns Type Description Vector3 [] ITwistDistributionData.TwistUpAxis The twist up axis. Declaration readonly Vector3 ITwistDistributionData.TwistUpAxis { get; } Returns Type Description Vector3 Implements ITwistDistributionData"
  },
  "api/Oculus.Movement.AnimationRigging.TwistDistributionJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.TwistDistributionJob.html",
    "title": "Struct TwistDistributionJob | Unity-Movement Documentation",
    "keywords": "Struct TwistDistributionJob The TwistDistribution job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct TwistDistributionJob Fields DeltaTime The array containing 1 element for the current delta time. Declaration public NativeArray<float> DeltaTime Field Value Type Description NativeArray < Single > SegmentDirections Buffer used to store segment direction during job execution. Declaration public NativeArray<Vector3> SegmentDirections Field Value Type Description NativeArray < Vector3 > SegmentUpAxis List of segment up for twist nodes. Declaration public NativeArray<Vector3> SegmentUpAxis Field Value Type Description NativeArray < Vector3 > SpacingBuffer Buffer used to store spacing during job execution. Declaration public NativeArray<float> SpacingBuffer Field Value Type Description NativeArray < Single > SpacingPositions Buffer used to store spacing positions job execution. Declaration public NativeArray<Vector3> SpacingPositions Field Value Type Description NativeArray < Vector3 > TwistAxisOffset The twist axis offset. Declaration public Quaternion TwistAxisOffset Field Value Type Description Quaternion TwistBindRotations List of cached local rotation for twist nodes. Declaration public NativeArray<Quaternion> TwistBindRotations Field Value Type Description NativeArray < Quaternion > TwistSource The transform handle for the twist source. Declaration public ReadOnlyTransformHandle TwistSource Field Value Type Description ReadOnlyTransformHandle TwistTransforms List of Transform handles for the twist nodes. Declaration public NativeArray<ReadWriteTransformHandle> TwistTransforms Field Value Type Description NativeArray < ReadWriteTransformHandle > TwistUpDirections List of initial up for twist nodes. Declaration public NativeArray<Vector3> TwistUpDirections Field Value Type Description NativeArray < Vector3 > TwistWeights List of weights for the twist nodes. Declaration public NativeArray<PropertyStreamHandle> TwistWeights Field Value Type Description NativeArray < PropertyStreamHandle > WeightBuffer Buffer used to store weights during job execution. Declaration public NativeArray<float> WeightBuffer Field Value Type Description NativeArray < Single > Properties jobWeight Job weight. Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty Methods ProcessAnimation(AnimationStream) Defines what to do when processing the animation. Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream The animation stream to work on. ProcessRootMotion(AnimationStream) Defines what to do when processing the root motion. Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream The animation stream to work on."
  },
  "api/Oculus.Movement.AnimationRigging.TwistDistributionJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.TwistDistributionJobBinder-1.html",
    "title": "Class TwistDistributionJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class TwistDistributionJobBinder<T> The TwistDistribution job binder. Inheritance Object TwistDistributionJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class TwistDistributionJobBinder<T> : AnimationJobBinder<TwistDistributionJob, T> where T : struct, IAnimationJobData, ITwistDistributionData Type Parameters Name Description T The constraint data type Methods Create(Animator, ref T, Component) Declaration public override TwistDistributionJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description TwistDistributionJob Destroy(TwistDistributionJob) Destroy the job and clean up arrays. Declaration public override void Destroy(TwistDistributionJob job) Parameters Type Name Description TwistDistributionJob job The job that is being destroyed. Update(TwistDistributionJob, ref T) Update job with component information. Declaration public override void Update(TwistDistributionJob job, ref T data) Parameters Type Name Description TwistDistributionJob job T data"
  },
  "api/Oculus.Movement.Effects.CompareVectorHashes.html": {
    "href": "api/Oculus.Movement.Effects.CompareVectorHashes.html",
    "title": "Class CompareVectorHashes | Unity-Movement Documentation",
    "keywords": "Class CompareVectorHashes Generates a bunch of vertices that are close to each other. Compares how hash sets consolidate the two. One is based on Unity's generic Vector3 hash function while another is based on a fancier VertexKey structure. Unity's can be found here: https://github.com/Unity-Technologies/UnityCsReference/blob/master/Runtime/Export/Math/Vector3.cs#L229 Inheritance Object CompareVectorHashes Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class CompareVectorHashes : MonoBehaviour Fields _marginOfError Margin of error used to generate random vertex positions. The closer in value, the more stringent the test. Declaration protected float _marginOfError Field Value Type Description Single _numVerticesToTest Number of vertices to test with hashes. Declaration protected int _numVerticesToTest Field Value Type Description Int32 Methods CompareHashesAgainstEachOther() Test hashes against each other and log output. Declaration public void CompareHashesAgainstEachOther()"
  },
  "api/Oculus.Movement.Effects.CompareVectorHashesEditor.html": {
    "href": "api/Oculus.Movement.Effects.CompareVectorHashesEditor.html",
    "title": "Class CompareVectorHashesEditor | Unity-Movement Documentation",
    "keywords": "Class CompareVectorHashesEditor Custom editor class for comparing vector hashes. Inheritance Object CompareVectorHashesEditor Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class CompareVectorHashesEditor : Editor Methods OnInspectorGUI() Defines the look of the script's GUI. Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Effects.HandDeformation.FingerInfo.html": {
    "href": "api/Oculus.Movement.Effects.HandDeformation.FingerInfo.html",
    "title": "Class HandDeformation.FingerInfo | Unity-Movement Documentation",
    "keywords": "Class HandDeformation.FingerInfo Finger class used for deformation. Inheritance Object HandDeformation.FingerInfo Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class FingerInfo Constructors FingerInfo(Transform, Transform, OVRSkeleton.BoneId, OVRSkeleton.BoneId) Main constructor. Declaration public FingerInfo(Transform startTransform, Transform endTransform, OVRSkeleton.BoneId startBoneId, OVRSkeleton.BoneId endBoneId) Parameters Type Name Description Transform startTransform Start transform for finger. Transform endTransform End transform for finger. OVRSkeleton.BoneId startBoneId OVRSkeleton.BoneId endBoneId Id of start bone. Fields EndBoneId The end transform bone id. Declaration public OVRSkeleton.BoneId EndBoneId Field Value Type Description OVRSkeleton.BoneId EndBoneTransform The end bone transform. Declaration public Transform EndBoneTransform Field Value Type Description Transform EndPosOffset The position offset based on local space to apply. Declaration public Vector3 EndPosOffset Field Value Type Description Vector3 EndRotOffset The rotation offset to apply. Declaration public Quaternion EndRotOffset Field Value Type Description Quaternion StartBoneId The start transform bone id. Declaration public OVRSkeleton.BoneId StartBoneId Field Value Type Description OVRSkeleton.BoneId StartBoneTransform The start bone transform. Declaration public Transform StartBoneTransform Field Value Type Description Transform Methods UpdateBonePosition(Boolean, Single) Updates the end bone transform position with the direction and distance added to the start bone transform position. Declaration public void UpdateBonePosition(bool useMoveTowards, float moveSpeed) Parameters Type Name Description Boolean useMoveTowards True if we should move towards the target position. Single moveSpeed The move towards speed. UpdateDirection() Updates the direction from the start to the end bone transform. Declaration public void UpdateDirection() UpdateDistance() Updates the distance between the start and end bone transforms. Declaration public void UpdateDistance() UpdateRotationBasedOnOffset() Update rotation based on offset relative to bind pose. Declaration public void UpdateRotationBasedOnOffset()"
  },
  "api/Oculus.Movement.Effects.HandDeformation.FingerOffset.html": {
    "href": "api/Oculus.Movement.Effects.HandDeformation.FingerOffset.html",
    "title": "Class HandDeformation.FingerOffset | Unity-Movement Documentation",
    "keywords": "Class HandDeformation.FingerOffset Finger offset class used for deformation. Inheritance Object HandDeformation.FingerOffset Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class FingerOffset Fields FingerId The id of the finger to apply the offset to. Declaration public OVRSkeleton.BoneId FingerId Field Value Type Description OVRSkeleton.BoneId FingerPosOffset The finger position offset. Declaration public Vector3 FingerPosOffset Field Value Type Description Vector3 FingerRotOffset The finger rotation offset. Declaration public Vector3 FingerRotOffset Field Value Type Description Vector3"
  },
  "api/Oculus.Movement.Effects.HandDeformation.html": {
    "href": "api/Oculus.Movement.Effects.HandDeformation.html",
    "title": "Class HandDeformation | Unity-Movement Documentation",
    "keywords": "Class HandDeformation Used to try to maintain the same proportions in the fingers for both hands. Inheritance Object HandDeformation Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class HandDeformation : MonoBehaviour Fields _copyFingerDataInUpdate If true, copy the finger offsets data into FingerInfo during every update. Declaration protected bool _copyFingerDataInUpdate Field Value Type Description Boolean _customSkeleton Custom skeleton to reference. Declaration protected OVRCustomSkeleton _customSkeleton Field Value Type Description OVRCustomSkeleton _fingerOffsets The array of finger offsets to be applied. Declaration protected HandDeformation.FingerOffset[] _fingerOffsets Field Value Type Description HandDeformation.FingerOffset [] Methods Awake() Initialize the finger offsets. Declaration protected void Awake() LateUpdate() Apply the finger offsets. Declaration protected void LateUpdate()"
  },
  "api/Oculus.Movement.Effects.html": {
    "href": "api/Oculus.Movement.Effects.html",
    "title": "Namespace Oculus.Movement.Effects | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.Effects Classes CompareVectorHashes Generates a bunch of vertices that are close to each other. Compares how hash sets consolidate the two. One is based on Unity's generic Vector3 hash function while another is based on a fancier VertexKey structure. Unity's can be found here: https://github.com/Unity-Technologies/UnityCsReference/blob/master/Runtime/Export/Math/Vector3.cs#L229 CompareVectorHashesEditor Custom editor class for comparing vector hashes. HandDeformation Used to try to maintain the same proportions in the fingers for both hands. HandDeformation.FingerInfo Finger class used for deformation. HandDeformation.FingerOffset Finger offset class used for deformation. LateMirroredObject Mirrors an object by copying its local transformation values. LateMirroredObject.MirroredTransformPair Contains information about a mirrored transform pair. LateMirroredObjectEditor Custom editor for late mirrored object. LateMirroredSkeleton Mirrors a skeleton by copying its local transformation values. LateMirroredSkeleton.MirroredBonePair Contains information about a mirrored bone pair. LateMirroredSkeletonEditor Custom editor for late mirrored skeleton. MacroFacialExpressionDetector This rudimentary macro expression detector (macro being smile, etc). It is not meant to be robust or advanced. MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs State change event args for macro expression. MatrixUtils Convenient methods that extend the functionality of Matrix. MirrorTransformation Applies mirror's transformation to an object that needs to be reflected. NormalRecalculator A utility class used to recalculate normals on the GPU or CPU, if the former can't do it. RecalculateNormals Uses original skinned mesh renderer to drive a skinned mesh renderer with recalculated normals. SmileEffect Reacts to smile detection by modifying the face material on the Aura asset. Structs VertexKey Class used to hash vertices reliably. CompareVectorHashes class is used to test its reliability against Unity's default hashing of vertices. Enums MacroFacialExpressionDetector.MacroExpressionState States for macro expressions test for. MacroFacialExpressionDetector.MacroExpressionType A list of macro expressions to test against."
  },
  "api/Oculus.Movement.Effects.LateMirroredObject.html": {
    "href": "api/Oculus.Movement.Effects.LateMirroredObject.html",
    "title": "Class LateMirroredObject | Unity-Movement Documentation",
    "keywords": "Class LateMirroredObject Mirrors an object by copying its local transformation values. Inheritance Object LateMirroredObject Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class LateMirroredObject : MonoBehaviour Fields _mirroredTransformPairs The array of mirrored transform pairs. Declaration protected LateMirroredObject.MirroredTransformPair[] _mirroredTransformPairs Field Value Type Description LateMirroredObject.MirroredTransformPair [] _mirrorScale Mirror scale. Declaration protected bool _mirrorScale Field Value Type Description Boolean _myTransform The target transform which transform values are being mirrored to. Declaration protected Transform _myTransform Field Value Type Description Transform _transformToCopy The transform which transform values are being mirrored from. Declaration protected Transform _transformToCopy Field Value Type Description Transform Properties MirroredTransform Returns the mirrored transform. Declaration public Transform MirroredTransform { get; } Property Value Type Description Transform OriginalTransform Returns the original transform. Declaration public Transform OriginalTransform { get; } Property Value Type Description Transform"
  },
  "api/Oculus.Movement.Effects.LateMirroredObject.MirroredTransformPair.html": {
    "href": "api/Oculus.Movement.Effects.LateMirroredObject.MirroredTransformPair.html",
    "title": "Class LateMirroredObject.MirroredTransformPair | Unity-Movement Documentation",
    "keywords": "Class LateMirroredObject.MirroredTransformPair Contains information about a mirrored transform pair. Inheritance Object LateMirroredObject.MirroredTransformPair Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class MirroredTransformPair Fields MirroredTransform The mirrored transform. Declaration public Transform MirroredTransform Field Value Type Description Transform Name The name of the mirrored transform pair. Declaration public string Name Field Value Type Description String OriginalTransform The original transform. Declaration public Transform OriginalTransform Field Value Type Description Transform"
  },
  "api/Oculus.Movement.Effects.LateMirroredObjectEditor.html": {
    "href": "api/Oculus.Movement.Effects.LateMirroredObjectEditor.html",
    "title": "Class LateMirroredObjectEditor | Unity-Movement Documentation",
    "keywords": "Class LateMirroredObjectEditor Custom editor for late mirrored object. Inheritance Object LateMirroredObjectEditor Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class LateMirroredObjectEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Effects.LateMirroredSkeleton.html": {
    "href": "api/Oculus.Movement.Effects.LateMirroredSkeleton.html",
    "title": "Class LateMirroredSkeleton | Unity-Movement Documentation",
    "keywords": "Class LateMirroredSkeleton Mirrors a skeleton by copying its local transformation values. Inheritance Object LateMirroredSkeleton Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class LateMirroredSkeleton : MonoBehaviour Fields _mirroredBonePairs The array of mirrored bone pairs. Declaration protected LateMirroredSkeleton.MirroredBonePair[] _mirroredBonePairs Field Value Type Description LateMirroredSkeleton.MirroredBonePair [] _mySkeleton The target skeleton which transform values are being mirrored to. Declaration protected OVRCustomSkeleton _mySkeleton Field Value Type Description OVRCustomSkeleton _skeletonToCopy The skeleton which transform values are being mirrored from. Declaration protected OVRCustomSkeleton _skeletonToCopy Field Value Type Description OVRCustomSkeleton Properties MirroredSkeleton Returns the mirrored skeleton. Declaration public OVRCustomSkeleton MirroredSkeleton { get; } Property Value Type Description OVRCustomSkeleton OriginalSkeleton Returns the original skeleton that the mirrored skeleton is mirroring. Declaration public OVRCustomSkeleton OriginalSkeleton { get; } Property Value Type Description OVRCustomSkeleton"
  },
  "api/Oculus.Movement.Effects.LateMirroredSkeleton.MirroredBonePair.html": {
    "href": "api/Oculus.Movement.Effects.LateMirroredSkeleton.MirroredBonePair.html",
    "title": "Class LateMirroredSkeleton.MirroredBonePair | Unity-Movement Documentation",
    "keywords": "Class LateMirroredSkeleton.MirroredBonePair Contains information about a mirrored bone pair. Inheritance Object LateMirroredSkeleton.MirroredBonePair Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class MirroredBonePair Fields MirroredBone The mirrored bone. Declaration public Transform MirroredBone Field Value Type Description Transform Name The name of the mirrored bone pair. Declaration public string Name Field Value Type Description String OriginalBone The original bone. Declaration public Transform OriginalBone Field Value Type Description Transform ShouldBeReparented If true, this mirrored bone should be reparented to match the original bone. Declaration public bool ShouldBeReparented Field Value Type Description Boolean"
  },
  "api/Oculus.Movement.Effects.LateMirroredSkeletonEditor.html": {
    "href": "api/Oculus.Movement.Effects.LateMirroredSkeletonEditor.html",
    "title": "Class LateMirroredSkeletonEditor | Unity-Movement Documentation",
    "keywords": "Class LateMirroredSkeletonEditor Custom editor for late mirrored skeleton. Inheritance Object LateMirroredSkeletonEditor Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class LateMirroredSkeletonEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.html": {
    "href": "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.html",
    "title": "Class MacroFacialExpressionDetector | Unity-Movement Documentation",
    "keywords": "Class MacroFacialExpressionDetector This rudimentary macro expression detector (macro being smile, etc). It is not meant to be robust or advanced. Inheritance Object MacroFacialExpressionDetector Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class MacroFacialExpressionDetector : MonoBehaviour Fields _ovrFaceExpressions OVRFaceExpressions component. Declaration protected OVRFaceExpressions _ovrFaceExpressions Field Value Type Description OVRFaceExpressions Properties MacroExpressionTypeToStrength Returns the strength of a macro expression. Declaration public Dictionary<MacroFacialExpressionDetector.MacroExpressionType, float> MacroExpressionTypeToStrength { get; } Property Value Type Description Dictionary < MacroFacialExpressionDetector.MacroExpressionType , Single > Events MacroExpressionStateChange Fires when expressions state changes. Declaration public event Action<MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs> MacroExpressionStateChange Event Type Type Description Action < MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs >"
  },
  "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.MacroExpressionState.html": {
    "href": "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.MacroExpressionState.html",
    "title": "Enum MacroFacialExpressionDetector.MacroExpressionState | Unity-Movement Documentation",
    "keywords": "Enum MacroFacialExpressionDetector.MacroExpressionState States for macro expressions test for. Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public enum MacroExpressionState Fields Name Description Active When state becomes active. Inactive When state becomes inactive. Maintain When state maintains itself."
  },
  "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs.html": {
    "href": "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs.html",
    "title": "Class MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs | Unity-Movement Documentation",
    "keywords": "Class MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs State change event args for macro expression. Inheritance Object MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class MacroExpressionStateChangeEventArgs Constructors MacroExpressionStateChangeEventArgs(MacroFacialExpressionDetector.MacroExpressionType, MacroFacialExpressionDetector.MacroExpressionState, MacroFacialExpressionDetector.MacroExpressionState, Single) Constructor for MacroExpressionStateChangeEventArgs. Declaration public MacroExpressionStateChangeEventArgs(MacroFacialExpressionDetector.MacroExpressionType expression, MacroFacialExpressionDetector.MacroExpressionState state, MacroFacialExpressionDetector.MacroExpressionState previousState, float minExpressionValue) Parameters Type Name Description MacroFacialExpressionDetector.MacroExpressionType expression Macro expression type associated with state change. MacroFacialExpressionDetector.MacroExpressionState state Current macro expression state. MacroFacialExpressionDetector.MacroExpressionState previousState Previous macro expression state. Single minExpressionValue Min value of blendshapes associated with macro expression. Fields Expression Macro expression type associated with state change. Declaration public readonly MacroFacialExpressionDetector.MacroExpressionType Expression Field Value Type Description MacroFacialExpressionDetector.MacroExpressionType MinExpressionValue Min value of blendshapes associated with macro expression. This \"floor\" gives an indication of how strong the macro expression is. Declaration public readonly float MinExpressionValue Field Value Type Description Single PreviousState Previous macro expression state. Declaration public readonly MacroFacialExpressionDetector.MacroExpressionState PreviousState Field Value Type Description MacroFacialExpressionDetector.MacroExpressionState State Current macro expression state. Declaration public readonly MacroFacialExpressionDetector.MacroExpressionState State Field Value Type Description MacroFacialExpressionDetector.MacroExpressionState"
  },
  "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.MacroExpressionType.html": {
    "href": "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.MacroExpressionType.html",
    "title": "Enum MacroFacialExpressionDetector.MacroExpressionType | Unity-Movement Documentation",
    "keywords": "Enum MacroFacialExpressionDetector.MacroExpressionType A list of macro expressions to test against. Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public enum MacroExpressionType Fields Name Description Angry Angry or frowning expression. Happy Smiling expression."
  },
  "api/Oculus.Movement.Effects.MatrixUtils.html": {
    "href": "api/Oculus.Movement.Effects.MatrixUtils.html",
    "title": "Class MatrixUtils | Unity-Movement Documentation",
    "keywords": "Class MatrixUtils Convenient methods that extend the functionality of Matrix. Inheritance Object MatrixUtils Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public static class MatrixUtils Methods GetPosition(Matrix4x4) Gets world-space position of matrix using last column of matrix. Declaration public static Vector3 GetPosition(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Matrix to be evaluated. Returns Type Description Vector3 World-space position. GetRotation(Matrix4x4) Gets world-space rotation of matrix. Uses forward and up vector to create a look rotation; right vector of matrix doesn't need to be used. Declaration public static Quaternion GetRotation(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Matrix to be evaluated. Returns Type Description Quaternion World-space quaternion. GetScale(Matrix4x4) Gets scale of matrix using right, up and forward vectors of matrix. Declaration public static Vector3 GetScale(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Matrix to be evaluated. Returns Type Description Vector3 Matrix scale."
  },
  "api/Oculus.Movement.Effects.MirrorTransformation.html": {
    "href": "api/Oculus.Movement.Effects.MirrorTransformation.html",
    "title": "Class MirrorTransformation | Unity-Movement Documentation",
    "keywords": "Class MirrorTransformation Applies mirror's transformation to an object that needs to be reflected. Inheritance Object MirrorTransformation Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class MirrorTransformation : MonoBehaviour Fields _mirrorNormal Mirror normal, perpendicular to mirror face. Declaration protected Vector3 _mirrorNormal Field Value Type Description Vector3 _mirrorPlaneOffset Allows mirror to be pushed into reflection plane somewhat, assuming mirror geometry has some thickness. Declaration protected float _mirrorPlaneOffset Field Value Type Description Single _transformToMirror Transform to be reflected. Declaration protected Transform _transformToMirror Field Value Type Description Transform"
  },
  "api/Oculus.Movement.Effects.NormalRecalculator.html": {
    "href": "api/Oculus.Movement.Effects.NormalRecalculator.html",
    "title": "Class NormalRecalculator | Unity-Movement Documentation",
    "keywords": "Class NormalRecalculator A utility class used to recalculate normals on the GPU or CPU, if the former can't do it. Inheritance Object NormalRecalculator Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class NormalRecalculator Methods CalculateNormals(Mesh) Custom normal calculation. The Unity Mesh.RecalculateNormals creates seams. See http://schemingdeveloper.com/2014/10/17/better-method-recalculate-normals-unity/ Declaration public void CalculateNormals(Mesh bakedMesh) Parameters Type Name Description Mesh bakedMesh Mesh to copy data from; feed into mesh that is rendered with recalculated normals. Initialize(Dictionary<Int32, List<Int32>>, HashSet<Int32>, Int32, Mesh, Material[]) Initialize data that the shader will use. This will involve flattening the dictionary argument. Declaration public void Initialize(Dictionary<int, List<int>> subMeshVertexIdToNeighborList, HashSet<int> subMeshVerticesSet, int vertexIdToTriangleMapCount, Mesh bakedBash, Material[] instantiatedMaterials) Parameters Type Name Description Dictionary < Int32 , List < Int32 >> subMeshVertexIdToNeighborList Vertex id to neighbor ids. HashSet < Int32 > subMeshVerticesSet Set of vertices in submesh. Int32 vertexIdToTriangleMapCount Total number of triangles counted. Mesh bakedBash Mesh snapshot obtained from original Material [] instantiatedMaterials Intantiated materials, used to feed structured buffers to. ReleaseResources() Cleans up resources used by shader for normal recalculation. Declaration public void ReleaseResources()"
  },
  "api/Oculus.Movement.Effects.RecalculateNormals.html": {
    "href": "api/Oculus.Movement.Effects.RecalculateNormals.html",
    "title": "Class RecalculateNormals | Unity-Movement Documentation",
    "keywords": "Class RecalculateNormals Uses original skinned mesh renderer to drive a skinned mesh renderer with recalculated normals. Inheritance Object RecalculateNormals Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class RecalculateNormals : MonoBehaviour Fields _duplicateLayerName The layer of the duplicate mesh with recalculate normals, should be on a visible layer. Declaration protected string _duplicateLayerName Field Value Type Description String _hiddenMeshLayerName The layer of original mesh with invalid normals, should be on invisible layer. Declaration protected string _hiddenMeshLayerName Field Value Type Description String _recalculateIndependently Allows recalculate normals to be calculated independently on LateUpdate, instead of being driven from DriveSkeletalLateUpdateLogic. Declaration protected bool _recalculateIndependently Field Value Type Description Boolean _recalculateMaterialIndices Index of material that needs meta data for normal recalc, since that is ultimately done in the vertex stage. Declaration protected int[] _recalculateMaterialIndices Field Value Type Description Int32 [] _skinnedMeshRenderer Skinned mesh renderer requiring normal recalc. Declaration protected SkinnedMeshRenderer _skinnedMeshRenderer Field Value Type Description SkinnedMeshRenderer _subMesh Submesh index to recalc normals on. Sometimes a mesh might have submeshes that shouldn't need normal recalc, and for performance reasons only the sub mesh of interest should be the focus on this script. Declaration protected int _subMesh Field Value Type Description Int32 _useUnityFunction Allows using Unity's stock recalc instead. Declaration protected bool _useUnityFunction Field Value Type Description Boolean GeneratedDuplicateMesh Fired when duplicate mesh has been generated. Declaration public Action GeneratedDuplicateMesh Field Value Type Description Action Properties DuplicateLayerName The layer of the duplicate mesh with recalculate normals, should be on a visible layer. Declaration public string DuplicateLayerName { get; set; } Property Value Type Description String RunRecalculation Allows toggling this scripts functionality on or off. Declaration public bool RunRecalculation { get; set; } Property Value Type Description Boolean Methods ApplyNormalRecalculation() Applies normal recalculation to the skinned mesh renderer Declaration public void ApplyNormalRecalculation()"
  },
  "api/Oculus.Movement.Effects.SmileEffect.html": {
    "href": "api/Oculus.Movement.Effects.SmileEffect.html",
    "title": "Class SmileEffect | Unity-Movement Documentation",
    "keywords": "Class SmileEffect Reacts to smile detection by modifying the face material on the Aura asset. Inheritance Object SmileEffect Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class SmileEffect : MonoBehaviour Fields _animator Animator to affect when smiling. Declaration protected Animator _animator Field Value Type Description Animator _facialExpressionDetector Facial expression detector to query events from. Declaration protected MacroFacialExpressionDetector _facialExpressionDetector Field Value Type Description MacroFacialExpressionDetector _glowCurve Glow curve that modulates emission strength on face. Declaration protected AnimationCurve _glowCurve Field Value Type Description AnimationCurve _materialIndex Material index to modify. Declaration protected int _materialIndex Field Value Type Description Int32 _renderer Renderer of the face. Declaration protected SkinnedMeshRenderer _renderer Field Value Type Description SkinnedMeshRenderer _reverseSmileStateName State name for reverse smile (when it \"undoes\" itself). Declaration protected string _reverseSmileStateName Field Value Type Description String _smileDelay Delay until smile gets triggered (seconds). Declaration protected float _smileDelay Field Value Type Description Single _smileEnabled Returns the current state of if smile is enabled or disabled. Declaration protected bool _smileEnabled Field Value Type Description Boolean _smileStateName State name for smile. Declaration protected string _smileStateName Field Value Type Description String Properties SmileEnabled Returns the current state of if smile is enabled or disabled. Declaration public bool SmileEnabled { get; set; } Property Value Type Description Boolean"
  },
  "api/Oculus.Movement.Effects.VertexKey.html": {
    "href": "api/Oculus.Movement.Effects.VertexKey.html",
    "title": "Struct VertexKey | Unity-Movement Documentation",
    "keywords": "Struct VertexKey Class used to hash vertices reliably. CompareVectorHashes class is used to test its reliability against Unity's default hashing of vertices. Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public struct VertexKey Constructors VertexKey(Vector3) VertexKey constructor. Declaration public VertexKey(Vector3 position) Parameters Type Name Description Vector3 position Input position. Methods Equals(Object) Override for Equals. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Object to compare to. Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Override for getting hash code. Declaration public override int GetHashCode() Returns Type Description Int32 Hash code. Overrides ValueType.GetHashCode()"
  },
  "api/Oculus.Movement.Tracking.ARKitFace.html": {
    "href": "api/Oculus.Movement.Tracking.ARKitFace.html",
    "title": "Class ARKitFace | Unity-Movement Documentation",
    "keywords": "Class ARKitFace Version of Correctives mapped to ARKit blend shapes, via \"custom\" mapping. Inheritance Object CorrectivesFace ARKitFace Inherited Members CorrectivesFace.CorrectivesEnabled CorrectivesFace.ExpressionWeights CorrectivesFace.FreezeExpressionWeights CorrectivesFace._blendshapeModifier CorrectivesFace.BlendshapeModifier CorrectivesFace._combinationShapesTextAsset CorrectivesFace.CombinationShapesTextAsset CorrectivesFace._cachedBlendshapeValues CorrectivesFace._correctivesModule CorrectivesFace.Awake() CorrectivesFace.GetFaceExpressionForIndex(Int32) CorrectivesFace.InitializeExpressionWeights() CorrectivesFace.ActivateFaceExpression(OVRFaceExpressions.FaceExpression) CorrectivesFace.Update() CorrectivesFace.UpdateExpressionWeights() CorrectivesFace.InitializeCachedValues() CorrectivesFace.UpdateCachedMeshValues() CorrectivesFace.UpdateSkinnedMesh() Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class ARKitFace : CorrectivesFace Methods GetCustomBlendShapeNameAndExpressionPairs() Defines ARKit blend shape name and face expression pair mappings. Declaration protected override (string[], OVRFaceExpressions.FaceExpression[]) GetCustomBlendShapeNameAndExpressionPairs() Returns Type Description (T1, T2) < String [], OVRFaceExpressions.FaceExpression []> Two arrays, each relating a blend shape name with a face expression pair."
  },
  "api/Oculus.Movement.Tracking.ARKitFaceEditor.html": {
    "href": "api/Oculus.Movement.Tracking.ARKitFaceEditor.html",
    "title": "Class ARKitFaceEditor | Unity-Movement Documentation",
    "keywords": "Class ARKitFaceEditor Custom Editor for ARKitFace component. Created so that the ARKitFace component has a proper editor class that inherits from CorrectivesFaceEditor . Inheritance Object CorrectivesFaceEditor ARKitFaceEditor Inherited Members CorrectivesFaceEditor.OnEnable() CorrectivesFaceEditor.OnInspectorGUI() Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class ARKitFaceEditor : CorrectivesFaceEditor"
  },
  "api/Oculus.Movement.Tracking.BlendshapeModifier.FaceExpressionModifier.html": {
    "href": "api/Oculus.Movement.Tracking.BlendshapeModifier.FaceExpressionModifier.html",
    "title": "Class BlendshapeModifier.FaceExpressionModifier | Unity-Movement Documentation",
    "keywords": "Class BlendshapeModifier.FaceExpressionModifier The modifier data for a specific set of facial expressions. Inheritance Object BlendshapeModifier.FaceExpressionModifier Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax [Serializable] public class FaceExpressionModifier Fields FaceExpressions The facial expressions that will be modified. Declaration public OVRFaceExpressions.FaceExpression[] FaceExpressions Field Value Type Description OVRFaceExpressions.FaceExpression [] MaxValue The maximum clamped blendshape weight for this set of facial expressions. Declaration public float MaxValue Field Value Type Description Single MinValue The minimum clamped blendshape weight for this set of facial expressions. Declaration public float MinValue Field Value Type Description Single Multiplier The blendshape weight multiplier for this set of facial expressions. Declaration public float Multiplier Field Value Type Description Single"
  },
  "api/Oculus.Movement.Tracking.BlendshapeModifier.html": {
    "href": "api/Oculus.Movement.Tracking.BlendshapeModifier.html",
    "title": "Class BlendshapeModifier | Unity-Movement Documentation",
    "keywords": "Class BlendshapeModifier Calculates the modified blendshape weight for a facial expression. Inheritance Object BlendshapeModifier Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class BlendshapeModifier : MonoBehaviour Fields _applyGlobalClampingNonMapped Apply global clamping to non-mapped values. Declaration protected bool _applyGlobalClampingNonMapped Field Value Type Description Boolean _defaultBlendshapeModifierPreset Optional text asset containing the array of face expression modifier data to be used. Declaration protected TextAsset _defaultBlendshapeModifierPreset Field Value Type Description TextAsset _faceExpressionModifiers The array of facial expression modifier data to be used. Declaration protected BlendshapeModifier.FaceExpressionModifier[] _faceExpressionModifiers Field Value Type Description BlendshapeModifier.FaceExpressionModifier [] _globalClampMax Global blendshape clamp max. Declaration protected float _globalClampMax Field Value Type Description Single _globalClampMin Global blendshape clamp min. Declaration protected float _globalClampMin Field Value Type Description Single _globalMultiplier Global blendshape multiplier. Declaration protected float _globalMultiplier Field Value Type Description Single Properties FaceExpressionModifierMap Declaration public IReadOnlyDictionary<OVRFaceExpressions.FaceExpression, BlendshapeModifier.FaceExpressionModifier> FaceExpressionModifierMap { get; } Property Value Type Description IReadOnlyDictionary < OVRFaceExpressions.FaceExpression , BlendshapeModifier.FaceExpressionModifier > Modifiers The array of facial expression modifier data to be used. Declaration public IReadOnlyCollection<BlendshapeModifier.FaceExpressionModifier> Modifiers { get; } Property Value Type Description IReadOnlyCollection < BlendshapeModifier.FaceExpressionModifier > Methods GetMaxValue(OVRFaceExpressions.FaceExpression) Returns the maximum clamped value for a facial expression. Declaration public float GetMaxValue(OVRFaceExpressions.FaceExpression faceExpression) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression Returns Type Description Single Maximum clamped value for a facial expression. GetMinValue(OVRFaceExpressions.FaceExpression) Returns the minimum clamped value for a facial expression. Declaration public float GetMinValue(OVRFaceExpressions.FaceExpression faceExpression) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression The facial expression. Returns Type Description Single Minimum clamped value for a facial expression. GetModifiedWeight(OVRFaceExpressions.FaceExpression, Single) Returns the modified weight for a facial expression. Declaration public float GetModifiedWeight(OVRFaceExpressions.FaceExpression faceExpression, float currentWeight) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression The facial expression. Single currentWeight The unmodified weight of the facial expression. Returns Type Description Single GetMultiplierValue(OVRFaceExpressions.FaceExpression) Returns the multiplier value for a facial expression. Declaration public float GetMultiplierValue(OVRFaceExpressions.FaceExpression faceExpression) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression The facial expression. Returns Type Description Single Multiplier modifier for a facial expression. LoadPreset(String) Loads the facial expression modifiers from text. Declaration public void LoadPreset(string presetJson) Parameters Type Name Description String presetJson The json containing the serialized facial expression modifiers. SavePreset() Saves the current facial expression modifiers to a timestamped json file. Declaration public void SavePreset() UpdateMaxValue(OVRFaceExpressions.FaceExpression, Single) Update the maximum clamped value for a facial expression. Declaration public void UpdateMaxValue(OVRFaceExpressions.FaceExpression faceExpression, float val) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression The facial expression. Single val The updated maximum value for the facial expression. UpdateMinValue(OVRFaceExpressions.FaceExpression, Single) Update the minimum clamped value for a facial expression. Declaration public void UpdateMinValue(OVRFaceExpressions.FaceExpression faceExpression, float val) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression The facial expression. Single val The updated minimum value for the facial expression. UpdateMultiplierValue(OVRFaceExpressions.FaceExpression, Single) Update the multiplier value for a facial expression. Declaration public void UpdateMultiplierValue(OVRFaceExpressions.FaceExpression faceExpression, float val) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression The facial expression. Single val The updated multiplier value for the facial expression."
  },
  "api/Oculus.Movement.Tracking.CorrectivesFace.html": {
    "href": "api/Oculus.Movement.Tracking.CorrectivesFace.html",
    "title": "Class CorrectivesFace | Unity-Movement Documentation",
    "keywords": "Class CorrectivesFace Face class that allows applying correctives and/or modifiers. Inheritance Object CorrectivesFace ARKitFace Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class CorrectivesFace : OVRCustomFace Fields _blendshapeModifier Optional blendshape modifier component. Declaration protected BlendshapeModifier _blendshapeModifier Field Value Type Description BlendshapeModifier _cachedBlendshapeValues Cached mesh blendshape values. Declaration protected float[] _cachedBlendshapeValues Field Value Type Description Single [] _combinationShapesTextAsset The json file containing the in-betweens and combinations data. Declaration protected TextAsset _combinationShapesTextAsset Field Value Type Description TextAsset _correctivesModule The correctives module. Declaration protected CorrectivesModule _correctivesModule Field Value Type Description CorrectivesModule Properties BlendshapeModifier Optional blendshape modifier component. Declaration public BlendshapeModifier BlendshapeModifier { get; set; } Property Value Type Description BlendshapeModifier CombinationShapesTextAsset The json file containing the in-betweens and combinations data. Declaration public TextAsset CombinationShapesTextAsset { get; set; } Property Value Type Description TextAsset CorrectivesEnabled If true, the correctives driver will apply correctives. Declaration public bool CorrectivesEnabled { get; set; } Property Value Type Description Boolean ExpressionWeights Last updated expression weights. Declaration public float[] ExpressionWeights { get; } Property Value Type Description Single [] FreezeExpressionWeights Allows one to freeze current values obtained from facial expressions component. Declaration public bool FreezeExpressionWeights { get; set; } Property Value Type Description Boolean Methods ActivateFaceExpression(OVRFaceExpressions.FaceExpression) Activates a single face expression and sets the other to zero. Declaration public void ActivateFaceExpression(OVRFaceExpressions.FaceExpression faceExpression) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression Face expression to activate. Awake() Initializes weights and correctives module. Declaration protected override void Awake() GetFaceExpressionForIndex(Int32) Returns OVRFaceExpressions value for the blend shape index provided. Declaration public OVRFaceExpressions.FaceExpression GetFaceExpressionForIndex(int blendShapeIndex) Parameters Type Name Description Int32 blendShapeIndex Blend shape index. Returns Type Description OVRFaceExpressions.FaceExpression OVRFaceExpression value. InitializeCachedValues() Initialize cached blendshape values. Declaration protected void InitializeCachedValues() InitializeExpressionWeights() Initialize the expression weights array. Declaration protected void InitializeExpressionWeights() Update() Applies correctives to values before updating the skinned mesh. Declaration protected override void Update() UpdateCachedMeshValues() Update the initialized cached values. Declaration protected void UpdateCachedMeshValues() UpdateExpressionWeights() Update the expression weight values from face tracking data. Declaration protected void UpdateExpressionWeights() UpdateSkinnedMesh() Update the skinned mesh with the cached blendshape values. Declaration protected void UpdateSkinnedMesh()"
  },
  "api/Oculus.Movement.Tracking.CorrectivesFaceEditor.html": {
    "href": "api/Oculus.Movement.Tracking.CorrectivesFaceEditor.html",
    "title": "Class CorrectivesFaceEditor | Unity-Movement Documentation",
    "keywords": "Class CorrectivesFaceEditor Custom Editor for CorrectivesFace component. Inheritance Object CorrectivesFaceEditor ARKitFaceEditor Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class CorrectivesFaceEditor : OVRCustomFaceEditor Methods OnEnable() Declaration protected override void OnEnable() OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Tracking.CorrectivesModule.Combination.html": {
    "href": "api/Oculus.Movement.Tracking.CorrectivesModule.Combination.html",
    "title": "Class CorrectivesModule.Combination | Unity-Movement Documentation",
    "keywords": "Class CorrectivesModule.Combination Defines a combination target. Inheritance Object CorrectivesModule.Combination Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax [Serializable] public class Combination Fields drivenIndex The blendshape index to be driven on the skinned mesh renderer. Declaration public int drivenIndex Field Value Type Description Int32 driverIndices The blendshape indices used in calculating the blendshape weight for the driven index. Declaration public int[] driverIndices Field Value Type Description Int32 []"
  },
  "api/Oculus.Movement.Tracking.CorrectivesModule.html": {
    "href": "api/Oculus.Movement.Tracking.CorrectivesModule.html",
    "title": "Class CorrectivesModule | Unity-Movement Documentation",
    "keywords": "Class CorrectivesModule Face correctives module. Inheritance Object CorrectivesModule Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class CorrectivesModule Constructors CorrectivesModule(TextAsset) Correctives module constructor. Declaration public CorrectivesModule(TextAsset combinationShapesTextAsset) Parameters Type Name Description TextAsset combinationShapesTextAsset Correctives text asset deserialized as JSON. Methods ApplyCorrectives(Single[]) Apply corrective blendshape weights to the skinned mesh renderer Declaration public void ApplyCorrectives(float[] blendShapevalues) Parameters Type Name Description Single [] blendShapevalues Blend shape values to update."
  },
  "api/Oculus.Movement.Tracking.CorrectivesModule.InBetween.html": {
    "href": "api/Oculus.Movement.Tracking.CorrectivesModule.InBetween.html",
    "title": "Class CorrectivesModule.InBetween | Unity-Movement Documentation",
    "keywords": "Class CorrectivesModule.InBetween Defines an in-between. Inheritance Object CorrectivesModule.InBetween Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax [Serializable] public class InBetween Fields domainEnd The domain range end from the function curve of the in-between. Declaration public float domainEnd Field Value Type Description Single domainStart The domain range start from the function curve of the in-between. Declaration public float domainStart Field Value Type Description Single drivenIndex The blendshape index to be driven on the skinned mesh renderer. Declaration public int drivenIndex Field Value Type Description Int32 driverIndex The target blendshape index used for calculating the blendshape weight. Declaration public int driverIndex Field Value Type Description Int32 offset_x The x offset from the function curve of the in-between. Declaration public float offset_x Field Value Type Description Single offset_y The y offset from the function curve of the in-between. Declaration public float offset_y Field Value Type Description Single slope The slope from the function curve of the in-between. Declaration public float slope Field Value Type Description Single"
  },
  "api/Oculus.Movement.Tracking.CorrectivesModule.RigLogicData.html": {
    "href": "api/Oculus.Movement.Tracking.CorrectivesModule.RigLogicData.html",
    "title": "Class CorrectivesModule.RigLogicData | Unity-Movement Documentation",
    "keywords": "Class CorrectivesModule.RigLogicData Defines in-betweens and combinations data. Inheritance Object CorrectivesModule.RigLogicData Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax [Serializable] public class RigLogicData Fields combinations Array of all of the combinations data. Declaration public CorrectivesModule.Combination[] combinations Field Value Type Description CorrectivesModule.Combination [] inBetweens Array of all of the in-betweens data. Declaration public CorrectivesModule.InBetween[] inBetweens Field Value Type Description CorrectivesModule.InBetween []"
  },
  "api/Oculus.Movement.Tracking.FaceExpressionModifierDrawer.html": {
    "href": "api/Oculus.Movement.Tracking.FaceExpressionModifierDrawer.html",
    "title": "Class FaceExpressionModifierDrawer | Unity-Movement Documentation",
    "keywords": "Class FaceExpressionModifierDrawer Editor class defining interface for FaceExpressionModifier which is a data class of BlendshapeModifier Inheritance Object FaceExpressionModifierDrawer Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class FaceExpressionModifierDrawer : PropertyDrawer Constructors FaceExpressionModifierDrawer() Editor class defining interface for FaceExpressionModifier which is a data class of BlendshapeModifier Declaration public FaceExpressionModifierDrawer() Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect rect, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect rect SerializedProperty property GUIContent label"
  },
  "api/Oculus.Movement.Tracking.html": {
    "href": "api/Oculus.Movement.Tracking.html",
    "title": "Namespace Oculus.Movement.Tracking | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.Tracking Classes ARKitFace Version of Correctives mapped to ARKit blend shapes, via \"custom\" mapping. ARKitFaceEditor Custom Editor for ARKitFace component. Created so that the ARKitFace component has a proper editor class that inherits from CorrectivesFaceEditor . BlendshapeModifier Calculates the modified blendshape weight for a facial expression. BlendshapeModifier.FaceExpressionModifier The modifier data for a specific set of facial expressions. CorrectivesFace Face class that allows applying correctives and/or modifiers. CorrectivesFaceEditor Custom Editor for CorrectivesFace component. CorrectivesModule Face correctives module. CorrectivesModule.Combination Defines a combination target. CorrectivesModule.InBetween Defines an in-between. CorrectivesModule.RigLogicData Defines in-betweens and combinations data. FaceExpressionModifierDrawer Editor class defining interface for FaceExpressionModifier which is a data class of BlendshapeModifier"
  },
  "api/Oculus.Movement.UI.BlendshapesMenuToggle.html": {
    "href": "api/Oculus.Movement.UI.BlendshapesMenuToggle.html",
    "title": "Class BlendshapesMenuToggle | Unity-Movement Documentation",
    "keywords": "Class BlendshapesMenuToggle Turns blend shapes manus based on function call, usually hooked up via UI. Inheritance Object BlendshapesMenuToggle Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class BlendshapesMenuToggle : MonoBehaviour Fields _blendShapesMenus Blend shapes menus to turn on/off. Declaration protected GameObject[] _blendShapesMenus Field Value Type Description GameObject [] Methods ToggleBlendshapesMenuEnableState() Toggles blendshapes menus on and off. Called via UI in scene. Declaration public void ToggleBlendshapesMenuEnableState()"
  },
  "api/Oculus.Movement.UI.BlendshapesMenuVisual.html": {
    "href": "api/Oculus.Movement.UI.BlendshapesMenuVisual.html",
    "title": "Class BlendshapesMenuVisual | Unity-Movement Documentation",
    "keywords": "Class BlendshapesMenuVisual Renders face expressions via TMPPro. Filters ones that are too low. Inheritance Object BlendshapesMenuVisual Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class BlendshapesMenuVisual : MonoBehaviour Fields _expressionsPrefix Prefix for rendered text. Declaration protected string _expressionsPrefix Field Value Type Description String _filterArray Can be used to filter blendshapes, in case all don't need to be rendered. Declaration protected string[] _filterArray Field Value Type Description String [] _minBlendshapeThreshold Threshold that blendshapes must passed before being rendered. Declaration protected float _minBlendshapeThreshold Field Value Type Description Single _ovrFaceExpressions Face expressions component which is queried. Declaration protected OVRFaceExpressions _ovrFaceExpressions Field Value Type Description OVRFaceExpressions _worldText Text mesh pro visual for blendshape values. Declaration protected TMPro.TextMeshPro _worldText Field Value Type Description TMPro.TextMeshPro"
  },
  "api/Oculus.Movement.UI.ButtonToggleIcon.html": {
    "href": "api/Oculus.Movement.UI.ButtonToggleIcon.html",
    "title": "Class ButtonToggleIcon | Unity-Movement Documentation",
    "keywords": "Class ButtonToggleIcon Allows usage of a button toggle icon. Inheritance Object ButtonToggleIcon Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class ButtonToggleIcon : MonoBehaviour Fields _deselectColor Deselected color. Declaration protected Color _deselectColor Field Value Type Description Color _selectColor Select color. Declaration protected Color _selectColor Field Value Type Description Color _toggleObject Object that indicates toggle state. Declaration protected GameObject _toggleObject Field Value Type Description GameObject Methods ToggleSelectIcon() Toggles the select icon state. Declaration public void ToggleSelectIcon()"
  },
  "api/Oculus.Movement.UI.HipPinningConstraintCalibration.html": {
    "href": "api/Oculus.Movement.UI.HipPinningConstraintCalibration.html",
    "title": "Class HipPinningConstraintCalibration | Unity-Movement Documentation",
    "keywords": "Class HipPinningConstraintCalibration Setup for performing initial hip pinning calibration. Inheritance Object HipPinningConstraintCalibration Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class HipPinningConstraintCalibration : MonoBehaviour Fields _calibrateMenu The game object that contains the renderers for this calibration menu. Declaration protected GameObject _calibrateMenu Field Value Type Description GameObject _hipPinningConstraints The hip pinning constraints. Declaration protected HipPinningConstraint[] _hipPinningConstraints Field Value Type Description HipPinningConstraint [] _mainCharacterRenderer The game object that contains the mesh renderers for the main character. Declaration protected GameObject _mainCharacterRenderer Field Value Type Description GameObject _mainHipPinningTargetRenderer The game object that contains the mesh renderers for the main hip pinning target. Declaration protected GameObject _mainHipPinningTargetRenderer Field Value Type Description GameObject _mirroredCharacterRenderer The game object that contains the mesh renderers for the mirrored character. Declaration protected GameObject _mirroredCharacterRenderer Field Value Type Description GameObject _mirrorHipPinningTargetRenderer The game object that contains the mesh renderers for the mirrored hip pinning target. Declaration protected GameObject _mirrorHipPinningTargetRenderer Field Value Type Description GameObject _skeleton The skeletal tracking data provider for the interface character. Declaration protected OVRCustomSkeleton _skeleton Field Value Type Description OVRCustomSkeleton Methods Calibrate() Calibrate the hip pinning target transform with the current tracked hip position Declaration public void Calibrate()"
  },
  "api/Oculus.Movement.UI.HipPinningConstraintNotification.html": {
    "href": "api/Oculus.Movement.UI.HipPinningConstraintNotification.html",
    "title": "Class HipPinningConstraintNotification | Unity-Movement Documentation",
    "keywords": "Class HipPinningConstraintNotification Activates/deactivates this game object based on the hip pinning leave event. Inheritance Object HipPinningConstraintNotification Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class HipPinningConstraintNotification : MonoBehaviour Fields _displayTime The amount of time that this notification should be enabled for. Declaration protected float _displayTime Field Value Type Description Single _hipPinningConstraint The hip pinning constraint. Declaration protected HipPinningConstraint _hipPinningConstraint Field Value Type Description HipPinningConstraint"
  },
  "api/Oculus.Movement.UI.html": {
    "href": "api/Oculus.Movement.UI.html",
    "title": "Namespace Oculus.Movement.UI | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.UI Classes BlendshapesMenuToggle Turns blend shapes manus based on function call, usually hooked up via UI. BlendshapesMenuVisual Renders face expressions via TMPPro. Filters ones that are too low. ButtonToggleIcon Allows usage of a button toggle icon. HipPinningConstraintCalibration Setup for performing initial hip pinning calibration. HipPinningConstraintNotification Activates/deactivates this game object based on the hip pinning leave event. RetargetingMenu Menu that allows spawning retargeted characters. SceneSelectIcon Aligns scene selection icon based on current scene. SceneSelectIcon.IconPositionInformation Information about the icon position. ScriptEffectToggle Toggles component on/off."
  },
  "api/Oculus.Movement.UI.RetargetingMenu.html": {
    "href": "api/Oculus.Movement.UI.RetargetingMenu.html",
    "title": "Class RetargetingMenu | Unity-Movement Documentation",
    "keywords": "Class RetargetingMenu Menu that allows spawning retargeted characters. Inheritance Object RetargetingMenu Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class RetargetingMenu : MonoBehaviour Fields _characterToSpawn Main character prefab to spawn. Declaration protected GameObject _characterToSpawn Field Value Type Description GameObject _spawnOffset Offset per spawn. Declaration protected Vector3 _spawnOffset Field Value Type Description Vector3 _spawnParent Parent to spawn under. Declaration protected Transform _spawnParent Field Value Type Description Transform Methods AddNormalRetargetedCharacter() Spawn retargeted character without animation rigging support. Declaration public void AddNormalRetargetedCharacter() AddRiggedRetargetedCharacter() Spawn retargeted character with animation riggin gsupport. Declaration public void AddRiggedRetargetedCharacter() RemoveLastCharacter() Removes last character spawned. Declaration public void RemoveLastCharacter()"
  },
  "api/Oculus.Movement.UI.SceneSelectIcon.html": {
    "href": "api/Oculus.Movement.UI.SceneSelectIcon.html",
    "title": "Class SceneSelectIcon | Unity-Movement Documentation",
    "keywords": "Class SceneSelectIcon Aligns scene selection icon based on current scene. Inheritance Object SceneSelectIcon Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class SceneSelectIcon : MonoBehaviour Fields _iconInformationArray Icon positions array. Declaration protected SceneSelectIcon.IconPositionInformation[] _iconInformationArray Field Value Type Description SceneSelectIcon.IconPositionInformation [] _iconTransform Icon transform to affect. Declaration protected Transform _iconTransform Field Value Type Description Transform"
  },
  "api/Oculus.Movement.UI.SceneSelectIcon.IconPositionInformation.html": {
    "href": "api/Oculus.Movement.UI.SceneSelectIcon.IconPositionInformation.html",
    "title": "Class SceneSelectIcon.IconPositionInformation | Unity-Movement Documentation",
    "keywords": "Class SceneSelectIcon.IconPositionInformation Information about the icon position. Inheritance Object SceneSelectIcon.IconPositionInformation Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax [Serializable] protected class IconPositionInformation Fields LocalPosition Local position to set. Declaration public Vector3 LocalPosition Field Value Type Description Vector3 SceneName Scene name to check for. Declaration public string SceneName Field Value Type Description String"
  },
  "api/Oculus.Movement.UI.ScriptEffectToggle.html": {
    "href": "api/Oculus.Movement.UI.ScriptEffectToggle.html",
    "title": "Class ScriptEffectToggle | Unity-Movement Documentation",
    "keywords": "Class ScriptEffectToggle Toggles component on/off. Inheritance Object ScriptEffectToggle Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class ScriptEffectToggle : MonoBehaviour Fields _componentToToggle The component to be toggled. Declaration protected SmileEffect _componentToToggle Field Value Type Description SmileEffect _featureString The feature text. Declaration protected string _featureString Field Value Type Description String _textToUpdate The text component to be updated when the component is toggled. Declaration protected TMPro.TextMeshPro _textToUpdate Field Value Type Description TMPro.TextMeshPro Methods Toggle() Toggles the component on/off. Declaration public void Toggle()"
  },
  "api/Oculus.Movement.Utils.AddComponentsRuntime.html": {
    "href": "api/Oculus.Movement.Utils.AddComponentsRuntime.html",
    "title": "Class AddComponentsRuntime | Unity-Movement Documentation",
    "keywords": "Class AddComponentsRuntime Allow adding components at runtime. Inheritance Object AddComponentsRuntime Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class AddComponentsRuntime Methods SetupCharacterForAnimationRiggingRetargeting(GameObject, Boolean) Adds Animation rigging + retargeting at runtime. Similar to the HelperMenus version except no undo actions since those are not allowed at runtime. Declaration public static void SetupCharacterForAnimationRiggingRetargeting(GameObject selectedGameObject, bool disableAvatar) Parameters Type Name Description GameObject selectedGameObject GameObject to add animation rigging + retargeting too. Boolean disableAvatar Disable avatar upon initialization. SetupCharacterForRetargeting(GameObject) Sets up character for retargeting. Declaration public static void SetupCharacterForRetargeting(GameObject selectedGameObject) Parameters Type Name Description GameObject selectedGameObject GameObject used for setup process."
  },
  "api/Oculus.Movement.Utils.html": {
    "href": "api/Oculus.Movement.Utils.html",
    "title": "Namespace Oculus.Movement.Utils | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.Utils Classes AddComponentsRuntime Allow adding components at runtime. ProjectValidation Validates various project settings for the samples to work correctly. ProjectValidationWindow Editor window that displays information about configuring the project. RequestMicrophonePermissions Request microphone permissions to be used as a fallback for OVRFaceExpression blendshapes when face tracking permissions aren't enabled, or if the face is obscured. ScreenshotFaceExpressions Take screenshots of the specified blendshape mapping. ScreenshotFaceExpressionsCapture Take screenshots of the specified blendshape mapping. ScreenshotFaceExpressionsCaptureEditor Custom Editor for ScreenshotFaceExpressionsCapture component. ScreenshotFaceExpressionsEditor Editor class defining interface for screenshot face expressions. ShaderBuildPreprocessor Process which shader variants get included in a build."
  },
  "api/Oculus.Movement.Utils.ProjectValidation.html": {
    "href": "api/Oculus.Movement.Utils.ProjectValidation.html",
    "title": "Class ProjectValidation | Unity-Movement Documentation",
    "keywords": "Class ProjectValidation Validates various project settings for the samples to work correctly. Inheritance Object ProjectValidation Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ProjectValidation Methods TestLayers() If all expected layers are in the project, returns true. Declaration public static bool TestLayers() Returns Type Description Boolean True if all expected layers are in the project."
  },
  "api/Oculus.Movement.Utils.ProjectValidationWindow.html": {
    "href": "api/Oculus.Movement.Utils.ProjectValidationWindow.html",
    "title": "Class ProjectValidationWindow | Unity-Movement Documentation",
    "keywords": "Class ProjectValidationWindow Editor window that displays information about configuring the project. Inheritance Object ProjectValidationWindow Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ProjectValidationWindow : EditorWindow Methods ShowProjectValidationWindow() Shows the project validation window. Declaration public static void ShowProjectValidationWindow()"
  },
  "api/Oculus.Movement.Utils.RequestMicrophonePermissions.html": {
    "href": "api/Oculus.Movement.Utils.RequestMicrophonePermissions.html",
    "title": "Class RequestMicrophonePermissions | Unity-Movement Documentation",
    "keywords": "Class RequestMicrophonePermissions Request microphone permissions to be used as a fallback for OVRFaceExpression blendshapes when face tracking permissions aren't enabled, or if the face is obscured. Inheritance Object RequestMicrophonePermissions Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class RequestMicrophonePermissions : MonoBehaviour Properties PermissionsFlowDone True when permissions done. Declaration public bool PermissionsFlowDone { get; } Property Value Type Description Boolean"
  },
  "api/Oculus.Movement.Utils.ScreenshotFaceExpressions.html": {
    "href": "api/Oculus.Movement.Utils.ScreenshotFaceExpressions.html",
    "title": "Class ScreenshotFaceExpressions | Unity-Movement Documentation",
    "keywords": "Class ScreenshotFaceExpressions Take screenshots of the specified blendshape mapping. Inheritance Object ScreenshotFaceExpressions Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ScreenshotFaceExpressions : MonoBehaviour Fields _camera The camera which its viewport will be used to take the screenshot. Declaration protected Camera _camera Field Value Type Description Camera _correctives The target corrective shapes driver. Declaration protected CorrectiveShapesDriver _correctives Field Value Type Description CorrectiveShapesDriver _mapping The target blendshape mapping. Declaration protected BlendshapeMapping _mapping Field Value Type Description BlendshapeMapping _screenshotFolder The path to the screenshots folder. Declaration protected string _screenshotFolder Field Value Type Description String _screenshotHeight The height of the screenshot texture. Declaration protected int _screenshotHeight Field Value Type Description Int32 _screenshotNeutral If true, take a screenshot of the viewport without any blendshapes. Declaration protected bool _screenshotNeutral Field Value Type Description Boolean _screenshotWidth The width of the screenshot texture. Declaration protected int _screenshotWidth Field Value Type Description Int32 Methods StartTakingBlendshapeScreenshots() Start the coroutine to take screenshots of all of the blendshapes. Declaration public void StartTakingBlendshapeScreenshots()"
  },
  "api/Oculus.Movement.Utils.ScreenshotFaceExpressionsCapture.html": {
    "href": "api/Oculus.Movement.Utils.ScreenshotFaceExpressionsCapture.html",
    "title": "Class ScreenshotFaceExpressionsCapture | Unity-Movement Documentation",
    "keywords": "Class ScreenshotFaceExpressionsCapture Take screenshots of the specified blendshape mapping. Inheritance Object ScreenshotFaceExpressionsCapture Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ScreenshotFaceExpressionsCapture : MonoBehaviour Fields _camera The camera which its viewport will be used to take the screenshot. Declaration protected Camera _camera Field Value Type Description Camera _correctivesFaceComponents All face components to drive while capturing screenshots. Declaration protected CorrectivesFace[] _correctivesFaceComponents Field Value Type Description CorrectivesFace [] _screenshotFolder The path to the screenshots folder. Declaration protected string _screenshotFolder Field Value Type Description String _screenshotHeight The height of the screenshot texture. Declaration protected int _screenshotHeight Field Value Type Description Int32 _screenshotNeutral If true, take a screenshot of the viewport without any blendshapes. Declaration protected bool _screenshotNeutral Field Value Type Description Boolean _screenshotWidth The width of the screenshot texture. Declaration protected int _screenshotWidth Field Value Type Description Int32 Methods StartTakingFaceExpressionScreenshots() Start the coroutine to take screenshots of all of the face expressions. Declaration public void StartTakingFaceExpressionScreenshots()"
  },
  "api/Oculus.Movement.Utils.ScreenshotFaceExpressionsCaptureEditor.html": {
    "href": "api/Oculus.Movement.Utils.ScreenshotFaceExpressionsCaptureEditor.html",
    "title": "Class ScreenshotFaceExpressionsCaptureEditor | Unity-Movement Documentation",
    "keywords": "Class ScreenshotFaceExpressionsCaptureEditor Custom Editor for ScreenshotFaceExpressionsCapture component. Inheritance Object ScreenshotFaceExpressionsCaptureEditor Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ScreenshotFaceExpressionsCaptureEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Utils.ScreenshotFaceExpressionsEditor.html": {
    "href": "api/Oculus.Movement.Utils.ScreenshotFaceExpressionsEditor.html",
    "title": "Class ScreenshotFaceExpressionsEditor | Unity-Movement Documentation",
    "keywords": "Class ScreenshotFaceExpressionsEditor Editor class defining interface for screenshot face expressions. Inheritance Object ScreenshotFaceExpressionsEditor Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ScreenshotFaceExpressionsEditor : Editor Methods OnInspectorGUI() Defines the look of the script's GUI. Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Utils.ShaderBuildPreprocessor.html": {
    "href": "api/Oculus.Movement.Utils.ShaderBuildPreprocessor.html",
    "title": "Class ShaderBuildPreprocessor | Unity-Movement Documentation",
    "keywords": "Class ShaderBuildPreprocessor Process which shader variants get included in a build. Inheritance Object ShaderBuildPreprocessor Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ShaderBuildPreprocessor : IPreprocessShaders Properties callbackOrder Used to set when Unity calls this shader preprocessor. Declaration public int callbackOrder { get; } Property Value Type Description Int32 Methods OnProcessShader(Shader, ShaderSnippetData, IList<ShaderCompilerData>) Callback before each shader is compiled. Declaration public void OnProcessShader(Shader shader, ShaderSnippetData snippet, IList<ShaderCompilerData> data) Parameters Type Name Description Shader shader The shader about to be compiled. ShaderSnippetData snippet Shader details. IList < ShaderCompilerData > data List of shader variants."
  },
  "index.html": {
    "href": "index.html",
    "title": "Unity-Movement | Unity-Movement Documentation",
    "keywords": "Unity-Movement Unity-Movement is a package that uses OpenXR’s tracking layer APIs to expose Meta Quest Pro’s Body Tracking (BT), Eye Tracking (ET), and Face Tracking (FT) capabilities. With this package, developers can leverage tracking to populate VR environments with custom avatars that bring the expressiveness of users into the virtual environments that they create. Requirements Unity 2021.3.21f1 (2021 LTS) or newer installed v53.0 or newer of the Oculus Integration SDK with OVRPlugin set to use OpenXR as backend. Make sure to include the VR and Interaction folders when importing into your project. A project set up with these configuration settings Licenses The Unity-Movement package is released under the Oculus License . The MIT License applies to only certain, clearly marked documents. If an individual file does not indicate which license it is subject to, then the Oculus License applies. Getting Started First, ensure that all of the requirements are met. Then, bring this package into the project. In Package Manager, click on the add button below the window title and select Add package from git URL… , using this URL: https://github.com/oculus-samples/Unity-Movement.git To grab a specific version of the package, append the version number with a # to the git URL (i.e. https://github.com/oculus-samples/Unity-Movement.git#1.2.0 ) Alternatively, in package manager, click on the add button below the window title and select Add package from disk... , using the package.json located after unzipping one of the releases here: https://github.com/oculus-samples/Unity-Movement/releases The sample scenes are located under the Samples/Scenes folder. Unity Setup If the new scene or an existing scene doesn’t have a GameObject with the OVRCameraRig component, follow the steps: From the Hierarchy tab, look for a Main Camera GameObject. If the Main Camera GameObject is present, right-click Main Camera and click Delete. In the Project tab, expand the Assets > Oculus > VR > Prefab folder and drag and drop the OVRCameraRig prefab into the scene. You can also drag and drop it into the Hierarchy tab. On the Inspector tab, go to OVR Manager > Quest Features. In the General tab, there are options to enable body, face, and eye tracking support. Select Supported or Required for the type of tracking support you wish to add. Under OVRManager's \"Permission Requests On Startup\" section, enable Body, Face and Eye Tracking. Ensure that OVRManager's \"Tracking Origin Type\" is set to \"Floor Level\". The Character (layer index 10), the MirroredCharacter (layer index 11), and HiddenMesh layers must be present in the project for RecalculateNormals to work correctly. Rendering Quality Navigate to your Project Settings (Edit->Project Settings...) and click on the \"Quality\" section. If your project uses URP, then some of these settings might be part the rendering pipeline asset currently in use. The pipeline picked will be shown in the Quality menu. The following settings are recommended: Four bones for Skin Weights. 2x or 4x Multi Sampling Anti Aliasing. Full resolution textures. Shadow settings: Hard and soft shadows. Very high shadow resolution. Stable fit. Shadow distance of 3 meters with cascades. This will allow viewing shadows nearby without experiencing poor quality. At least one pixel light. Player Settings Make sure that the color space is set to Linear. Build Settings In order for the SceneSelectMenu buttons to work, add the scenes located in the Samples/Scenes folder of the package. Samples The project contains several sample scenes. To test the samples, add the scenes located in the Packages/com.meta.movement/Samples/Scenes folder to the project's Assets folder. For more information about the samples, read Aura Sample , Blendshape Mapping Example Sample , Hip Pinning Sample , High Fidelity Sample , and Retargeting Sample . Documentation The documentation for this package can be found here . The API reference for this package can be found here ."
  },
  "manual/overview.html": {
    "href": "manual/overview.html",
    "title": "Overview | Unity-Movement Documentation",
    "keywords": "Overview The overview for this package can be found here ."
  },
  "manual/samples.html": {
    "href": "manual/samples.html",
    "title": "Samples | Unity-Movement Documentation",
    "keywords": "Samples The documentation for the samples in this package can be found here ."
  }
}